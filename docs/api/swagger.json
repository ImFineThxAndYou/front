{
"openapi": "3.1.0",
"info": {
"title": "HowAreYou API Documentation",
"description": "HowAreYou 서비스의 API 문서입니다.",
"version": "1.0.0"
},
"servers": [
{
"url": "http://localhost:8080",
"description": "Generated server url"
}
],
"security": [
{
"bearerAuth": []
}
],
"tags": [
{
"name": "회원 테스트",
"description": "회원 관련 테스트용 API (개발 환경에서만 사용)"
},
{
"name": "알림",
"description": "실시간 알림 및 SSE 관련 API"
},
{
"name": "테스트",
"description": "개발 및 테스트용 API (개발 환경에서만 사용)"
},
{
"name": "개인 단어장",
"description": "사용자별 개인 단어장 조회 API"
},
{
"name": "채팅 메시지",
"description": "채팅방 메시지 관련 API"
},
{
"name": "채팅방",
"description": "채팅방 생성, 수락/거절, 조회 등 관련 API"
},
{
"name": "알림 테스트",
"description": "알림 시스템 테스트용 API (개발 환경에서만 사용)"
},
{
"name": "회원 관리",
"description": "사용자 계정 및 프로필 관련 API"
},
{
"name": "인증",
"description": "로그인, 로그아웃, 토큰 갱신 관련 API"
},
{
"name": "채팅 단어장",
"description": "채팅방 기반 단어장 및 텍스트 분석 API"
},
{
"name": "Translation",
"description": "텍스트 번역 API"
}
],
"paths": {
"/api/members/me": {
"get": {
"tags": [
"회원 관리"
],
"summary": "내 프로필 조회",
"description": "현재 로그인한 사용자의 프로필 정보를 조회합니다.",
"operationId": "getMyProfile",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProfileResponse"
}
}
}
}
}
},
"put": {
"tags": [
"회원 관리"
],
"summary": "프로필 생성/수정",
"description": "현재 로그인한 사용자의 프로필을 생성하거나 수정합니다.",
"operationId": "updateMyProfile",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProfileCreateRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProfileResponse"
}
}
}
}
}
},
"delete": {
"tags": [
"회원 관리"
],
"summary": "계정 삭제",
"description": "현재 로그인한 사용자의 계정을 삭제합니다.\n- 소프트 삭제가 적용되어 실제 데이터는 보관되지만 로그인이 불가능합니다.",
"operationId": "deleteMyAccount",
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/upload-csv": {
"post": {
"tags": [
"csv-upload-controller"
],
"operationId": "uploadCsv",
"parameters": [
{
"name": "filename",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "string"
}
}
}
}
}
}
},
"/api/vocabook/analyze/chats": {
"post": {
"tags": [
"채팅 단어장"
],
"summary": "텍스트 분석",
"description": "입력된 텍스트를 분석하여 학습 가능한 단어들을 추출합니다. NLP 엔진을 사용하여 문맥에 맞는 단어와 의미를 제공합니다.",
"operationId": "analyzeText",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/AnalyzeRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "텍스트 분석 성공",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/AnalyzedResponseWord"
}
}
}
}
},
"400": {
"description": "잘못된 요청",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/AnalyzedResponseWord"
}
}
}
}
},
"500": {
"description": "서버 내부 오류",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/AnalyzedResponseWord"
}
}
}
}
}
}
}
},
"/api/translate/specific": {
"post": {
"tags": [
"Translation"
],
"summary": "Gemini로 번역 (고품질/다시 번역)",
"description": "기본 번역 결과에 만족하지 않을 경우, Google Gemini API를 통해 고품질 번역을 제공합니다.",
"operationId": "translateSpecific",
"requestBody": {
"description": "번역 요청 DTO",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TranslateRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "번역 성공",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TranslateResponseDto"
}
}
}
},
"400": {
"description": "잘못된 요청",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ErrorResponse"
}
}
}
},
"500": {
"description": "서버 내부 오류",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ErrorResponse"
}
}
}
}
}
}
},
"/api/translate/basic": {
"post": {
"tags": [
"Translation"
],
"summary": "기본 번역 (LiberTranslate)",
"description": "LiberTranslate 엔진을 사용해 텍스트를 번역합니다. 일반적으로 빠르고 경제적인 번역을 제공합니다.",
"operationId": "translateBasic",
"requestBody": {
"description": "번역 요청 DTO",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TranslateRequestDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "번역 성공",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TranslateResponseDto"
}
}
}
},
"400": {
"description": "잘못된 요청",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ErrorResponse"
}
}
}
},
"500": {
"description": "서버 내부 오류",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ErrorResponse"
}
}
}
}
}
}
},
"/api/test/voca/generate-vocabook": {
"post": {
"tags": [
"voca-test-controller"
],
"summary": "단어장 생성 배치 실행 (테스트)",
"description": "주어진 시간 범위에 포함된 채팅 메시지를 기반으로 NLP 분석 후 MongoDB에 단어장 데이터를 저장합니다. 파라미터 생략 시 기본적으로 직전 1시간 범위로 분석합니다.",
"operationId": "testGenerateVocabulary",
"parameters": [
{
"name": "start",
"in": "query",
"description": "시작 시간 (ISO-8601 형식)",
"required": false,
"schema": {
"type": "string",
"format": "date-time"
},
"example": "2025-08-05T04:00:00Z"
},
{
"name": "end",
"in": "query",
"description": "종료 시간 (ISO-8601 형식)",
"required": false,
"schema": {
"type": "string",
"format": "date-time"
},
"example": "2025-08-07T05:00:00Z"
}
],
"responses": {
"200": {
"description": "단어장 생성 성공",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
},
"500": {
"description": "단어장 생성 중 서버 오류",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/voca/generate-for-member": {
"post": {
"tags": [
"voca-test-controller"
],
"summary": "사용자 단어장 생성 실행 (테스트)",
"description": "특정 사용자에 대해 단어장 생성 로직을 실행합니다.\n- start/end 미지정 시, timezone 기준 '어제 00:00 ~ 오늘 00:00'을 자동 계산합니다.\n- userLang은 'ko' 또는 'en' (반대 언어가 수집 대상)\n",
"operationId": "generateForMember",
"parameters": [
{
"name": "memberId",
"in": "query",
"description": "사용자 ID",
"required": true,
"schema": {
"type": "integer",
"format": "int64"
},
"example": 3
},
{
"name": "membername",
"in": "query",
"description": "사용자 membername",
"required": true,
"schema": {
"type": "string"
},
"example": "user1"
},
{
"name": "userLang",
"in": "query",
"description": "사용자 언어(ko/en) — 반대 언어가 수집 대상",
"required": true,
"schema": {
"type": "string"
},
"example": "ko"
},
{
"name": "start",
"in": "query",
"description": "시작 시간 (ISO-8601, UTC)",
"required": false,
"schema": {
"type": "string",
"format": "date-time"
},
"example": "2025-08-08T00:00:00Z"
},
{
"name": "end",
"in": "query",
"description": "종료 시간 (ISO-8601, UTC)",
"required": false,
"schema": {
"type": "string",
"format": "date-time"
},
"example": "2025-08-09T00:00:00Z"
},
{
"name": "timezone",
"in": "query",
"description": "타임존 (start/end 미지정 시 사용)",
"required": false,
"schema": {
"type": "string",
"default": "Asia/Seoul"
},
"example": "Asia/Seoul"
}
],
"responses": {
"200": {
"description": "생성 실행 성공",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
},
"500": {
"description": "실행 중 서버 오류"
}
}
}
},
"/api/test/voca/create-chats": {
"post": {
"tags": [
"voca-test-controller"
],
"summary": "테스트용 채팅 메시지 생성",
"description": "채팅방 UUID, 발신자, 메시지 내용, 시간 등을 포함하여 다건 테스트 채팅 데이터를 MongoDB에 저장합니다.",
"operationId": "createTestChats",
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"type": "object",
"additionalProperties": {}
}
}
}
},
"required": true
},
"responses": {
"200": {
"description": "채팅 메시지 생성 성공",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
},
"400": {
"description": "입력값 오류"
},
"500": {
"description": "서버 오류"
}
}
}
},
"/api/test/notifications/send-system": {
"post": {
"tags": [
"알림 테스트"
],
"operationId": "sendSystemNotification",
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/notifications/send-chatreq": {
"post": {
"tags": [
"알림 테스트"
],
"summary": "채팅 요청 알림 발송 테스트",
"description": "채팅 요청 알림을 특정 사용자에게 발송합니다. receiverName, requesterId, requesterName, message가 모두 필요합니다.",
"operationId": "sendChatReqNotification",
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/notifications/send-chat": {
"post": {
"tags": [
"알림 테스트"
],
"summary": "채팅 알림 발송 테스트",
"description": "채팅 메시지 알림을 특정 사용자에게 발송합니다. receiverName, roomId, senderId, messageId, message가 모두 필요합니다.",
"operationId": "sendChatNotification",
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/migrate-cache": {
"post": {
"tags": [
"테스트"
],
"operationId": "migrateCache",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/create-default-accounts": {
"post": {
"tags": [
"테스트"
],
"summary": "기본 테스트 계정들 생성",
"description": "개발 및 테스트를 위한 기본 테스트 계정들을 일괄 생성합니다. testuser, testuser2, testuser3 계정이 생성됩니다.",
"operationId": "createDefaultAccounts",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/create-account": {
"post": {
"tags": [
"테스트"
],
"summary": "테스트 계정 생성",
"description": "개발 및 테스트를 위한 임시 계정을 생성합니다. email, password, membername이 모두 필요합니다.",
"operationId": "createTestAccount",
"requestBody": {
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {
"type": "string"
}
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/clear-cache": {
"post": {
"tags": [
"테스트"
],
"operationId": "clearCache",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/notify/heartbeat": {
"post": {
"tags": [
"알림"
],
"summary": "하트비트 응답",
"description": "SSE 연결 유지를 위한 하트비트 응답을 전송합니다. 서버에서 ping 이벤트를 받으면 이 엔드포인트로 응답하여 연결 상태를 유지해야 합니다.",
"operationId": "heartbeat",
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/api/members/search/filter": {
"post": {
"tags": [
"회원 관리"
],
"summary": "관심사 필터 기반 다른 유저 조회",
"description": "  필터에 지정된 모든 카테고리를 포함하는 다른 활성화된 유저 프로필 목록을 반환합니다.\n",
"operationId": "getFilter",
"requestBody": {
"description": "관심사 필터 요청",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/FilterRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "조회 성공",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MemberProfile"
}
}
}
}
},
"400": {
"description": "잘못된 요청",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ErrorResponse"
}
}
}
},
"401": {
"description": "인증되지 않음",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ErrorResponse"
}
}
}
},
"500": {
"description": "서버 오류",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ErrorResponse"
}
}
}
}
}
}
},
"/api/members/membername": {
"post": {
"tags": [
"회원 관리"
],
"summary": "Membername 설정",
"description": "사용자의 Membername을 최초 설정하거나 변경합니다.",
"operationId": "setMembername",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MembernameRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MembernameResponse"
}
}
}
}
}
}
},
"/api/chat-room/{roomUuid}/reject": {
"post": {
"tags": [
"채팅방"
],
"summary": "채팅방 거절",
"description": "상대방의 채팅 요청을 거절합니다.",
"operationId": "rejectChatRoom",
"parameters": [
{
"name": "roomUuid",
"in": "path",
"description": "채팅방 UUID",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/api/chat-room/{roomUuid}/accept": {
"post": {
"tags": [
"채팅방"
],
"summary": "채팅방 수락",
"description": "상대방의 채팅 요청을 수락합니다.",
"operationId": "acceptChatRoom",
"parameters": [
{
"name": "roomUuid",
"in": "path",
"description": "채팅방 UUID",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/api/chat-room/create": {
"post": {
"tags": [
"채팅방"
],
"summary": "채팅방 생성",
"description": "상대방과의 1:1 채팅방을 생성합니다.",
"operationId": "createChatRoom",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/CreateChatRoomRequest"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "채팅방 생성 성공",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/CreateChatRoomResponse"
}
}
}
},
"400": {
"description": "잘못된 요청",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/CreateChatRoomResponse"
}
}
}
},
"500": {
"description": "서버 오류",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/CreateChatRoomResponse"
}
}
}
}
}
}
},
"/api/chat-message/{chatRoomId}/read": {
"post": {
"tags": [
"채팅 메시지"
],
"summary": "메시지 읽음 처리",
"description": "채팅방에서 사용자 기준으로 메시지를 읽음 처리합니다.",
"operationId": "markMessagesAsRead",
"parameters": [
{
"name": "chatRoomId",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "읽음 처리 완료"
},
"401": {
"description": "인증 실패"
},
"500": {
"description": "서버 오류"
}
}
}
},
"/api/auth/refresh": {
"post": {
"tags": [
"인증"
],
"summary": "토큰 갱신",
"description": "리프레시 토큰을 사용하여 새로운 액세스 토큰을 발급받습니다. 리프레시 토큰은 쿠키에서 자동으로 읽어집니다.",
"operationId": "refresh",
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/api/auth/logout": {
"post": {
"tags": [
"인증"
],
"summary": "로그아웃",
"description": "현재 세션을 종료하고 리프레시 토큰을 무효화합니다. 리프레시 토큰 쿠키도 자동으로 삭제됩니다.",
"operationId": "logout",
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/api/auth/login": {
"post": {
"tags": [
"인증"
],
"summary": "로그인",
"description": "이메일과 비밀번호로 로그인하여 액세스 토큰과 리프레시 토큰을 발급받습니다. 액세스 토큰은 Authorization 헤더로, 리프레시 토큰은 HttpOnly 쿠키로 전송됩니다.",
"operationId": "login",
"requestBody": {
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/LoginDto"
}
}
},
"required": true
},
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/TokenBundle"
}
}
}
}
}
}
},
"/api/notify/{id}/read": {
"patch": {
"tags": [
"알림"
],
"summary": "알림 읽음 처리",
"description": "특정 알림을 읽음 상태로 변경합니다.",
"operationId": "markRead",
"parameters": [
{
"name": "id",
"in": "path",
"description": "알림 ID (UUID)",
"required": true,
"schema": {
"type": "string"
},
"example": "123e4567-e89b-12d3-a456-426614174000"
}
],
"responses": {
"204": {
"description": "No Content"
}
}
}
},
"/api/vocabook/{chatRoomUuid}": {
"get": {
"tags": [
"채팅 단어장"
],
"summary": "특정 채팅방의 단어장 목록 조회",
"description": "채팅방 UUID를 기준으로, 해당 채팅방에서 생성된 모든 단어장 목록을 최신순으로 반환합니다.\n\n예시: room1234, room5678",
"operationId": "getVocabularyListByChatRoom",
"parameters": [
{
"name": "chatRoomUuid",
"in": "path",
"description": "채팅방 UUID",
"required": true,
"schema": {
"type": "string"
},
"example": "room1234"
}
],
"responses": {
"200": {
"description": "단어장 목록 조회 성공",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ChatRoomVocabulary"
}
}
}
}
},
"404": {
"description": "해당 채팅방의 단어장이 존재하지 않음",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ChatRoomVocabulary"
}
}
}
}
}
}
}
},
"/api/vocabook/member/{membername}": {
"get": {
"tags": [
"개인 단어장"
],
"summary": "특정 사용자의 전체 단어장 목록 조회",
"description": "특정 사용자가 학습한 모든 날짜의 단어장 목록을 조회합니다.",
"operationId": "getVocabulariesByMember",
"parameters": [
{
"name": "membername",
"in": "path",
"description": "사용자명",
"required": true,
"schema": {
"type": "string"
},
"example": "john_doe"
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MemberVocabulary"
}
}
}
}
}
}
}
},
"/api/vocabook/member/{membername}/{date}": {
"get": {
"tags": [
"개인 단어장"
],
"summary": "특정 사용자의 날짜별 단어장 조회",
"description": "특정 사용자가 특정 날짜에 학습한 단어장을 조회합니다. 날짜는 yyyy-MM-dd 형식으로 입력해야 합니다.",
"operationId": "getVocabulariesByMemberAndDate",
"parameters": [
{
"name": "membername",
"in": "path",
"description": "사용자명",
"required": true,
"schema": {
"type": "string"
},
"example": "john_doe"
},
{
"name": "date",
"in": "path",
"description": "날짜 (yyyy-MM-dd 형식)",
"required": true,
"schema": {
"type": "string"
},
"example": "2024-01-15"
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MemberVocabulary"
}
}
}
}
}
}
},
"/api/vocabook/member/all": {
"get": {
"tags": [
"개인 단어장"
],
"summary": "전체 사용자 단어장 목록 조회",
"description": "모든 사용자의 단어장 목록을 조회합니다. (관리자용)",
"operationId": "getAllMemberVocabularies",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MemberVocabulary"
}
}
}
}
}
}
}
},
"/api/vocabook/all": {
"get": {
"tags": [
"채팅 단어장"
],
"summary": "전체 단어장 목록 조회",
"description": "모든 채팅방의 단어장 목록을 최신순으로 반환합니다.",
"operationId": "getAllVocabularies",
"responses": {
"200": {
"description": "전체 단어장 목록 조회 성공",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ChatRoomVocabulary"
}
}
}
}
}
}
}
},
"/api/test/notifications/test-users": {
"get": {
"tags": [
"알림 테스트"
],
"operationId": "getTestUsers",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/notifications/status/{memberName}": {
"get": {
"tags": [
"알림 테스트"
],
"operationId": "checkConnectionStatus",
"parameters": [
{
"name": "memberName",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/notifications/status-all": {
"get": {
"tags": [
"알림 테스트"
],
"operationId": "checkAllConnectionStatus",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/db-status": {
"get": {
"tags": [
"테스트"
],
"operationId": "checkDatabaseStatus",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/test/cache-health": {
"get": {
"tags": [
"테스트"
],
"operationId": "checkCacheHealth",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {}
}
}
}
}
}
}
},
"/api/notify": {
"get": {
"tags": [
"알림"
],
"summary": "알림 목록 조회",
"description": "사용자의 알림 목록을 페이지네이션으로 조회합니다. 최신 알림부터 정렬되어 반환됩니다.",
"operationId": "list",
"parameters": [
{
"name": "page",
"in": "query",
"description": "페이지 번호 (0부터 시작)",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 0
},
"example": 0
},
{
"name": "size",
"in": "query",
"description": "페이지 크기",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 20
},
"example": 20
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/PageNotifyDto"
}
}
}
}
}
}
},
"/api/notify/unread-count": {
"get": {
"tags": [
"알림"
],
"summary": "읽지 않은 알림 개수 조회",
"description": "사용자가 읽지 않은 알림의 개수를 반환합니다.",
"operationId": "unreadCount",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "object",
"additionalProperties": {
"type": "integer",
"format": "int64"
}
}
}
}
}
}
}
},
"/api/notify/sse": {
"get": {
"tags": [
"알림"
],
"summary": "SSE 연결 구독",
"description": "Server-Sent Events를 통한 실시간 알림 구독을 시작합니다. 연결 후 서버에서 ping 이벤트를 주기적으로 전송하며, 클라이언트는 heartbeat 엔드포인트로 응답해야 합니다.",
"operationId": "subscribe",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/SseEmitter"
}
}
}
}
}
}
},
"/api/members/{membername}": {
"get": {
"tags": [
"회원 관리"
],
"summary": "공개 프로필 조회",
"description": "특정 사용자의 공개 프로필을 조회합니다.",
"operationId": "getPublicProfile",
"parameters": [
{
"name": "membername",
"in": "path",
"description": "조회할 사용자 ID",
"required": true,
"schema": {
"type": "string"
},
"example": 1
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ProfileResponse"
}
}
}
}
}
}
},
"/api/members/{membername}/status": {
"get": {
"tags": [
"회원 관리"
],
"summary": "사용자 상태 조회",
"description": "사용자의 온라인/오프라인 상태, 마지막 활동 시간, 프로필 완료 여부를 조회합니다.",
"operationId": "getMemberStatus",
"parameters": [
{
"name": "membername",
"in": "path",
"description": "상태를 조회할 사용자 ID",
"required": true,
"schema": {
"type": "string"
},
"example": 1
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/MemberStatusResponse"
}
}
}
}
}
}
},
"/api/members/search/peers": {
"get": {
"tags": [
"회원 관리"
],
"summary": "같은 관심사를 가진 다른 유저 조회",
"description": "로그인한 사용자가 설정한 관심사와 동일한 카테고리를 가진\n다른 활성화된 사용자들의 프로필 목록을 반환합니다.\n",
"operationId": "getPeers",
"responses": {
"200": {
"description": "조회 성공",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MemberProfile"
}
}
}
}
},
"401": {
"description": "인증되지 않음",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ErrorResponse"
}
}
}
},
"500": {
"description": "서버 에러",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ErrorResponse"
}
}
}
}
}
}
},
"/api/members/membername/duplicated": {
"get": {
"tags": [
"회원 관리"
],
"summary": "Membername 중복 확인",
"description": "입력한 Membername이 이미 존재하는지 확인합니다. (프론트 실시간 AJAX용)",
"operationId": "duplicated",
"parameters": [
{
"name": "membername",
"in": "query",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "boolean"
}
}
}
}
}
}
},
"/api/members/all": {
"get": {
"tags": [
"회원 테스트"
],
"summary": "전체 회원 목록 조회",
"description": "시스템에 등록된 모든 회원의 목록을 조회합니다. (테스트용)",
"operationId": "getAllMembers",
"responses": {
"200": {
"description": "OK",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/Member"
}
}
}
}
}
}
}
},
"/api/chat-room/{roomUuid}": {
"get": {
"tags": [
"채팅방"
],
"summary": "단일 채팅방 조회",
"description": "특정 채팅방의 상세 정보를 조회합니다.",
"operationId": "getChatRoom",
"parameters": [
{
"name": "roomUuid",
"in": "path",
"description": "채팅방 UUID",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "조회 성공",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ChatRoomResponse"
}
}
}
}
}
},
"delete": {
"tags": [
"채팅방"
],
"summary": "채팅방 연결 해제 및 삭제",
"description": "현재 사용자가 채팅방에서 나가고 연결을 끊습니다.",
"operationId": "disconnectChatRoom",
"parameters": [
{
"name": "roomUuid",
"in": "path",
"description": "채팅방 UUID",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"204": {
"description": "삭제 성공"
},
"404": {
"description": "채팅방 없음"
}
}
}
},
"/api/chat-room/my-rooms": {
"get": {
"tags": [
"채팅방"
],
"summary": "내 채팅방 목록 조회",
"description": "현재 로그인한 사용자가 참여 중인 채팅방 목록을 조회합니다.",
"operationId": "getMyChatRooms",
"responses": {
"200": {
"description": "조회 성공",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ChatRoomSummaryResponse"
}
}
}
}
}
}
},
"/api/chat-message/{chatRoomId}/recent": {
"get": {
"tags": [
"채팅 메시지"
],
"summary": "최근 메시지 조회",
"description": "지정된 채팅방에서 가장 최근의 메시지 N개를 조회합니다. (Redis 우선 조회)",
"operationId": "getRecentMessages",
"parameters": [
{
"name": "chatRoomId",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "count",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 30
}
}
],
"responses": {
"200": {
"description": "조회 성공",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ChatMessageDocumentResponse"
}
}
}
},
"404": {
"description": "채팅방 없음",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ChatMessageDocumentResponse"
}
}
}
}
},
"500": {
"description": "서버 오류",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ChatMessageDocumentResponse"
}
}
}
}
}
}
}
},
"/api/chat-message/{chatRoomId}/previous": {
"get": {
"tags": [
"채팅 메시지"
],
"summary": "이전 메시지 페이징 조회",
"description": "무한스크롤 방식으로 특정 시간 이전의 메시지들을 조회합니다.",
"operationId": "getPreviousMessages",
"parameters": [
{
"name": "chatRoomId",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
},
{
"name": "before",
"in": "query",
"required": true,
"schema": {
"type": "string",
"format": "date-time"
}
},
{
"name": "size",
"in": "query",
"required": false,
"schema": {
"type": "integer",
"format": "int32",
"default": 30
}
}
],
"responses": {
"200": {
"description": "조회 성공",
"content": {
"application/json": {
"schema": {
"$ref": "#/components/schemas/ChatMessageDocumentResponse"
}
}
}
},
"400": {
"description": "잘못된 시간 형식",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ChatMessageDocumentResponse"
}
}
}
}
},
"500": {
"description": "서버 오류",
"content": {
"application/json": {
"schema": {
"type": "array",
"items": {
"$ref": "#/components/schemas/ChatMessageDocumentResponse"
}
}
}
}
}
}
}
}
},
"components": {
"schemas": {
"ProfileCreateRequest": {
"type": "object",
"properties": {
"nickname": {
"type": "string",
"minLength": 1
},
"statusMessage": {
"type": "string"
},
"avatarUrl": {
"type": "string"
},
"interests": {
"type": "array",
"items": {
"type": "string",
"enum": [
"LANGUAGE_LEARNING",
"TRAVEL",
"CULTURE",
"BUSINESS",
"EDUCATION",
"TECHNOLOGY",
"SPORTS",
"MUSIC",
"FOOD",
"ART",
"SCIENCE",
"HISTORY",
"MOVIES",
"GAMES",
"LITERATURE",
"PHOTOGRAPHY",
"NATURE",
"FITNESS",
"FASHION",
"VOLUNTEERING",
"ANIMALS",
"CARS",
"DIY",
"FINANCE"
]
},
"uniqueItems": true
},
"birthDate": {
"type": "string",
"format": "date"
},
"country": {
"type": "string",
"pattern": "^[A-Za-z]{2}$"
},
"region": {
"type": "string"
},
"language": {
"type": "string",
"pattern": "^(ko|en)$"
},
"timezone": {
"type": "string"
}
},
"required": [
"nickname"
]
},
"ProfileResponse": {
"type": "object",
"properties": {
"membername": {
"type": "string"
},
"nickname": {
"type": "string"
},
"avatarUrl": {
"type": "string"
},
"bio": {
"type": "string"
},
"interests": {
"type": "array",
"items": {
"type": "string",
"enum": [
"LANGUAGE_LEARNING",
"TRAVEL",
"CULTURE",
"BUSINESS",
"EDUCATION",
"TECHNOLOGY",
"SPORTS",
"MUSIC",
"FOOD",
"ART",
"SCIENCE",
"HISTORY",
"MOVIES",
"GAMES",
"LITERATURE",
"PHOTOGRAPHY",
"NATURE",
"FITNESS",
"FASHION",
"VOLUNTEERING",
"ANIMALS",
"CARS",
"DIY",
"FINANCE"
]
},
"uniqueItems": true
},
"completed": {
"type": "boolean"
},
"language": {
"type": "string"
},
"timezone": {
"type": "string"
},
"birthDate": {
"type": "string",
"format": "date"
},
"age": {
"type": "integer",
"format": "int32"
},
"country": {
"type": "string"
},
"region": {
"type": "string"
}
}
},
"AnalyzeRequestDto": {
"type": "object",
"description": "분석할 텍스트",
"properties": {
"text": {
"type": "string"
}
}
},
"AnalyzedResponseWord": {
"type": "object",
"properties": {
"text": {
"type": "string"
},
"pos": {
"type": "string"
},
"lang": {
"type": "string"
}
}
},
"TranslateRequestDto": {
"type": "object",
"description": "번역 요청 DTO",
"properties": {
"q": {
"type": "string",
"description": "번역할 원문",
"example": "안녕하세요"
},
"source": {
"type": "string",
"description": "소스 언어",
"example": "ko"
},
"target": {
"type": "string",
"description": "타겟 언어",
"example": "en"
}
}
},
"TranslateResponseDto": {
"type": "object",
"description": "번역 응답 DTO",
"properties": {
"translatedText": {
"type": "string",
"description": "번역된 결과",
"example": "Hello"
}
}
},
"ErrorResponse": {
"type": "object",
"properties": {
"headers": {
"type": "object",
"additionalProperties": {
"type": "array",
"items": {
"type": "string"
}
},
"properties": {
"connection": {
"type": "array",
"items": {
"type": "string"
}
},
"ifModifiedSince": {
"type": "integer",
"format": "int64"
},
"contentType": {
"$ref": "#/components/schemas/MediaType"
},
"contentLength": {
"type": "integer",
"format": "int64"
},
"empty": {
"type": "boolean"
},
"location": {
"type": "string",
"format": "uri"
},
"host": {
"type": "object",
"properties": {
"hostString": {
"type": "string"
},
"address": {
"type": "object",
"properties": {
"hostAddress": {
"type": "string"
},
"address": {
"type": "string",
"format": "byte"
},
"hostName": {
"type": "string"
},
"linkLocalAddress": {
"type": "boolean"
},
"anyLocalAddress": {
"type": "boolean"
},
"multicastAddress": {
"type": "boolean"
},
"loopbackAddress": {
"type": "boolean"
},
"siteLocalAddress": {
"type": "boolean"
},
"mcglobal": {
"type": "boolean"
},
"mcnodeLocal": {
"type": "boolean"
},
"mclinkLocal": {
"type": "boolean"
},
"mcsiteLocal": {
"type": "boolean"
},
"mcorgLocal": {
"type": "boolean"
},
"canonicalHostName": {
"type": "string"
}
}
},
"port": {
"type": "integer",
"format": "int32"
},
"unresolved": {
"type": "boolean"
},
"hostName": {
"type": "string"
}
}
},
"all": {
"type": "object",
"additionalProperties": {
"type": "string"
},
"writeOnly": true
},
"lastModified": {
"type": "integer",
"format": "int64"
},
"date": {
"type": "integer",
"format": "int64"
},
"origin": {
"type": "string"
},
"range": {
"type": "array",
"items": {
"$ref": "#/components/schemas/HttpRange"
}
},
"acceptLanguage": {
"type": "array",
"items": {
"type": "object",
"properties": {
"range": {
"type": "string"
},
"weight": {
"type": "number",
"format": "double"
}
}
}
},
"basicAuth": {
"type": "string",
"writeOnly": true
},
"acceptLanguageAsLocales": {
"type": "array",
"items": {
"type": "string"
}
},
"acceptPatch": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MediaType"
}
},
"accessControlMaxAge": {
"type": "integer",
"format": "int64"
},
"acceptCharset": {
"type": "array",
"items": {
"type": "string"
}
},
"bearerAuth": {
"type": "string",
"writeOnly": true
},
"contentDisposition": {
"$ref": "#/components/schemas/ContentDisposition"
},
"contentLanguage": {
"type": "string"
},
"ifNoneMatch": {
"type": "array",
"items": {
"type": "string"
}
},
"ifUnmodifiedSince": {
"type": "integer",
"format": "int64"
},
"cacheControl": {
"type": "string"
},
"allow": {
"type": "array",
"items": {
"$ref": "#/components/schemas/HttpMethod"
},
"uniqueItems": true
},
"etag": {
"type": "string"
},
"accessControlAllowCredentials": {
"type": "boolean"
},
"accessControlAllowHeaders": {
"type": "array",
"items": {
"type": "string"
}
},
"accessControlAllowMethods": {
"type": "array",
"items": {
"$ref": "#/components/schemas/HttpMethod"
}
},
"accessControlAllowOrigin": {
"type": "string"
},
"accessControlExposeHeaders": {
"type": "array",
"items": {
"type": "string"
}
},
"accessControlRequestHeaders": {
"type": "array",
"items": {
"type": "string"
}
},
"accessControlRequestMethod": {
"$ref": "#/components/schemas/HttpMethod"
},
"accept": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MediaType"
}
},
"expires": {
"type": "integer",
"format": "int64"
},
"ifMatch": {
"type": "array",
"items": {
"type": "string"
}
},
"pragma": {
"type": "string"
},
"upgrade": {
"type": "string"
},
"vary": {
"type": "array",
"items": {
"type": "string"
}
}
}
},
"body": {
"$ref": "#/components/schemas/ProblemDetail"
},
"detailMessageArguments": {
"type": "array",
"items": {}
},
"typeMessageCode": {
"type": "string"
},
"detailMessageCode": {
"type": "string"
},
"titleMessageCode": {
"type": "string"
},
"statusCode": {
"oneOf": [
{
"$ref": "#/components/schemas/DefaultHttpStatusCode"
},
{
"$ref": "#/components/schemas/HttpStatus"
}
]
}
}
},
"FilterRequest": {
"type": "object",
"properties": {
"interests": {
"type": "array",
"items": {
"type": "string",
"enum": [
"LANGUAGE_LEARNING",
"TRAVEL",
"CULTURE",
"BUSINESS",
"EDUCATION",
"TECHNOLOGY",
"SPORTS",
"MUSIC",
"FOOD",
"ART",
"SCIENCE",
"HISTORY",
"MOVIES",
"GAMES",
"LITERATURE",
"PHOTOGRAPHY",
"NATURE",
"FITNESS",
"FASHION",
"VOLUNTEERING",
"ANIMALS",
"CARS",
"DIY",
"FINANCE"
]
},
"uniqueItems": true
}
}
},
"MemberProfile": {
"type": "object",
"properties": {
"id": {
"type": "integer",
"format": "int64"
},
"createdAt": {
"type": "string",
"format": "date-time"
},
"updatedAt": {
"type": "string",
"format": "date-time"
},
"nickname": {
"type": "string"
},
"avatarUrl": {
"type": "string"
},
"bio": {
"type": "string"
},
"interests": {
"type": "array",
"items": {
"type": "string",
"enum": [
"LANGUAGE_LEARNING",
"TRAVEL",
"CULTURE",
"BUSINESS",
"EDUCATION",
"TECHNOLOGY",
"SPORTS",
"MUSIC",
"FOOD",
"ART",
"SCIENCE",
"HISTORY",
"MOVIES",
"GAMES",
"LITERATURE",
"PHOTOGRAPHY",
"NATURE",
"FITNESS",
"FASHION",
"VOLUNTEERING",
"ANIMALS",
"CARS",
"DIY",
"FINANCE"
]
},
"uniqueItems": true
},
"completed": {
"type": "boolean"
},
"language": {
"type": "string"
},
"timezone": {
"type": "string"
},
"birthDate": {
"type": "string",
"format": "date"
},
"country": {
"type": "string"
},
"region": {
"type": "string"
},
"age": {
"type": "integer",
"format": "int32"
}
}
},
"ContentDisposition": {
"type": "object",
"properties": {
"type": {
"type": "string"
},
"name": {
"type": "string"
},
"filename": {
"type": "string"
},
"charset": {
"type": "string"
},
"size": {
"type": "integer",
"format": "int64",
"deprecated": true
},
"creationDate": {
"type": "string",
"format": "date-time",
"deprecated": true
},
"modificationDate": {
"type": "string",
"format": "date-time",
"deprecated": true
},
"readDate": {
"type": "string",
"format": "date-time",
"deprecated": true
},
"inline": {
"type": "boolean"
},
"attachment": {
"type": "boolean"
},
"formData": {
"type": "boolean"
}
}
},
"DefaultHttpStatusCode": {
"allOf": [
{
"$ref": "#/components/schemas/HttpStatusCode"
}
]
},
"HttpMethod": {},
"HttpRange": {},
"HttpStatus": {
"allOf": [
{
"$ref": "#/components/schemas/HttpStatusCode"
}
],
"enum": [
"100 CONTINUE",
"101 SWITCHING_PROTOCOLS",
"102 PROCESSING",
"103 EARLY_HINTS",
"103 CHECKPOINT",
"200 OK",
"201 CREATED",
"202 ACCEPTED",
"203 NON_AUTHORITATIVE_INFORMATION",
"204 NO_CONTENT",
"205 RESET_CONTENT",
"206 PARTIAL_CONTENT",
"207 MULTI_STATUS",
"208 ALREADY_REPORTED",
"226 IM_USED",
"300 MULTIPLE_CHOICES",
"301 MOVED_PERMANENTLY",
"302 FOUND",
"302 MOVED_TEMPORARILY",
"303 SEE_OTHER",
"304 NOT_MODIFIED",
"305 USE_PROXY",
"307 TEMPORARY_REDIRECT",
"308 PERMANENT_REDIRECT",
"400 BAD_REQUEST",
"401 UNAUTHORIZED",
"402 PAYMENT_REQUIRED",
"403 FORBIDDEN",
"404 NOT_FOUND",
"405 METHOD_NOT_ALLOWED",
"406 NOT_ACCEPTABLE",
"407 PROXY_AUTHENTICATION_REQUIRED",
"408 REQUEST_TIMEOUT",
"409 CONFLICT",
"410 GONE",
"411 LENGTH_REQUIRED",
"412 PRECONDITION_FAILED",
"413 PAYLOAD_TOO_LARGE",
"413 REQUEST_ENTITY_TOO_LARGE",
"414 URI_TOO_LONG",
"414 REQUEST_URI_TOO_LONG",
"415 UNSUPPORTED_MEDIA_TYPE",
"416 REQUESTED_RANGE_NOT_SATISFIABLE",
"417 EXPECTATION_FAILED",
"418 I_AM_A_TEAPOT",
"419 INSUFFICIENT_SPACE_ON_RESOURCE",
"420 METHOD_FAILURE",
"421 DESTINATION_LOCKED",
"422 UNPROCESSABLE_ENTITY",
"423 LOCKED",
"424 FAILED_DEPENDENCY",
"425 TOO_EARLY",
"426 UPGRADE_REQUIRED",
"428 PRECONDITION_REQUIRED",
"429 TOO_MANY_REQUESTS",
"431 REQUEST_HEADER_FIELDS_TOO_LARGE",
"451 UNAVAILABLE_FOR_LEGAL_REASONS",
"500 INTERNAL_SERVER_ERROR",
"501 NOT_IMPLEMENTED",
"502 BAD_GATEWAY",
"503 SERVICE_UNAVAILABLE",
"504 GATEWAY_TIMEOUT",
"505 HTTP_VERSION_NOT_SUPPORTED",
"506 VARIANT_ALSO_NEGOTIATES",
"507 INSUFFICIENT_STORAGE",
"508 LOOP_DETECTED",
"509 BANDWIDTH_LIMIT_EXCEEDED",
"510 NOT_EXTENDED",
"511 NETWORK_AUTHENTICATION_REQUIRED"
]
},
"HttpStatusCode": {
"type": "object",
"properties": {
"error": {
"type": "boolean"
},
"is4xxClientError": {
"type": "boolean"
},
"is5xxServerError": {
"type": "boolean"
},
"is1xxInformational": {
"type": "boolean"
},
"is2xxSuccessful": {
"type": "boolean"
},
"is3xxRedirection": {
"type": "boolean"
}
}
},
"MediaType": {
"type": "object",
"properties": {
"type": {
"type": "string"
},
"subtype": {
"type": "string"
},
"parameters": {
"type": "object",
"additionalProperties": {
"type": "string"
}
},
"qualityValue": {
"type": "number",
"format": "double"
},
"charset": {
"type": "string"
},
"concrete": {
"type": "boolean"
},
"wildcardType": {
"type": "boolean"
},
"wildcardSubtype": {
"type": "boolean"
},
"subtypeSuffix": {
"type": "string"
}
}
},
"ProblemDetail": {
"type": "object",
"properties": {
"type": {
"type": "string",
"format": "uri"
},
"title": {
"type": "string"
},
"status": {
"type": "integer",
"format": "int32"
},
"detail": {
"type": "string"
},
"instance": {
"type": "string",
"format": "uri"
},
"properties": {
"type": "object",
"additionalProperties": {}
}
}
},
"MembernameRequest": {
"type": "object",
"properties": {
"membername": {
"type": "string",
"minLength": 1,
"pattern": "^[a-z0-9_]{3,30}$"
}
},
"required": [
"membername"
]
},
"MembernameResponse": {
"type": "object",
"properties": {
"username": {
"type": "string"
}
}
},
"CreateChatRoomRequest": {
"type": "object",
"properties": {
"memberName": {
"type": "string"
}
}
},
"CreateChatRoomResponse": {
"type": "object",
"properties": {
"uuid": {
"type": "string"
}
}
},
"LoginDto": {
"type": "object",
"description": "로그인 정보",
"properties": {
"email": {
"type": "string"
},
"password": {
"type": "string"
}
}
},
"TokenBundle": {
"type": "object",
"properties": {
"access": {
"type": "string"
},
"refresh": {
"type": "string"
},
"completed": {
"type": "boolean"
}
}
},
"ChatRoomVocabulary": {
"type": "object",
"properties": {
"id": {
"type": "string"
},
"chatRoomUuid": {
"type": "string"
},
"analyzedAt": {
"type": "string",
"format": "date-time"
},
"words": {
"type": "array",
"items": {
"$ref": "#/components/schemas/DictionaryWordEntry"
}
}
}
},
"DictionaryWordEntry": {
"type": "object",
"properties": {
"word": {
"type": "string"
},
"meaning": {
"type": "string"
},
"pos": {
"type": "string"
},
"lang": {
"type": "string"
},
"level": {
"type": "string"
},
"dictionaryType": {
"type": "string"
},
"usedInMessages": {
"type": "array",
"items": {
"type": "string"
}
}
}
},
"MemberVocabulary": {
"type": "object",
"properties": {
"id": {
"type": "string"
},
"membername": {
"type": "string"
},
"createdAt": {
"type": "string",
"format": "date-time"
},
"words": {
"type": "array",
"items": {
"$ref": "#/components/schemas/MemberWordEntry"
}
}
}
},
"MemberWordEntry": {
"type": "object",
"properties": {
"word": {
"type": "string"
},
"meaning": {
"type": "string"
},
"pos": {
"type": "string"
},
"lang": {
"type": "string"
},
"level": {
"type": "string"
},
"dictionaryType": {
"type": "string"
},
"chatRoomUuid": {
"type": "string"
},
"analyzedAt": {
"type": "string",
"format": "date-time"
},
"frequency": {
"type": "integer",
"format": "int32"
}
}
},
"NotifyDto": {
"type": "object",
"properties": {
"id": {
"type": "string"
},
"type": {
"type": "string",
"enum": [
"CHAT",
"CHATREQ",
"SYSTEM"
]
},
"createdAt": {
"type": "string",
"format": "date-time"
},
"readAt": {
"type": "string",
"format": "date-time"
},
"payload": {
"type": "string"
}
}
},
"PageNotifyDto": {
"type": "object",
"properties": {
"totalElements": {
"type": "integer",
"format": "int64"
},
"totalPages": {
"type": "integer",
"format": "int32"
},
"first": {
"type": "boolean"
},
"last": {
"type": "boolean"
},
"size": {
"type": "integer",
"format": "int32"
},
"content": {
"type": "array",
"items": {
"$ref": "#/components/schemas/NotifyDto"
}
},
"number": {
"type": "integer",
"format": "int32"
},
"sort": {
"$ref": "#/components/schemas/SortObject"
},
"numberOfElements": {
"type": "integer",
"format": "int32"
},
"pageable": {
"$ref": "#/components/schemas/PageableObject"
},
"empty": {
"type": "boolean"
}
}
},
"PageableObject": {
"type": "object",
"properties": {
"offset": {
"type": "integer",
"format": "int64"
},
"sort": {
"$ref": "#/components/schemas/SortObject"
},
"pageNumber": {
"type": "integer",
"format": "int32"
},
"pageSize": {
"type": "integer",
"format": "int32"
},
"unpaged": {
"type": "boolean"
},
"paged": {
"type": "boolean"
}
}
},
"SortObject": {
"type": "object",
"properties": {
"empty": {
"type": "boolean"
},
"unsorted": {
"type": "boolean"
},
"sorted": {
"type": "boolean"
}
}
},
"SseEmitter": {
"type": "object",
"properties": {
"timeout": {
"type": "integer",
"format": "int64"
}
}
},
"MemberStatusResponse": {
"type": "object",
"properties": {
"membername": {
"type": "string"
},
"online": {
"type": "boolean"
},
"lastActiveAt": {
"type": "string",
"format": "date-time"
},
"profileCompleted": {
"type": "boolean"
}
}
},
"Member": {
"type": "object",
"properties": {
"id": {
"type": "integer",
"format": "int64"
},
"createdAt": {
"type": "string",
"format": "date-time"
},
"updatedAt": {
"type": "string",
"format": "date-time"
},
"email": {
"type": "string"
},
"membername": {
"type": "string"
},
"active": {
"type": "boolean"
},
"role": {
"type": "string",
"enum": [
"USER",
"ADMIN"
]
},
"lastActiveAt": {
"type": "string",
"format": "date-time"
},
"profile": {
"$ref": "#/components/schemas/MemberProfile"
},
"profileCompleted": {
"type": "boolean"
}
}
},
"ChatRoomResponse": {
"type": "object",
"properties": {
"uuid": {
"type": "string"
},
"roomStatus": {
"type": "string"
},
"memberId": {
"type": "integer",
"format": "int64"
},
"memberName": {
"type": "string"
}
}
},
"ChatRoomSummaryResponse": {
"type": "object",
"properties": {
"chatRoomId": {
"type": "string"
},
"opponentId": {
"type": "integer",
"format": "int64"
},
"opponentName": {
"type": "string"
},
"roomStatus": {
"type": "string"
},
"lastMessageContent": {
"type": "string"
},
"lastMessageTime": {
"type": "string",
"format": "date-time"
},
"unreadCount": {
"type": "integer",
"format": "int32"
}
}
},
"ChatMessageDocumentResponse": {
"type": "object",
"properties": {
"id": {
"type": "string"
},
"chatRoomUuid": {
"type": "string"
},
"sender": {
"type": "string"
},
"content": {
"type": "string"
},
"messageTime": {
"type": "string",
"format": "date-time"
},
"chatMessageStatus": {
"type": "string"
}
}
}
},
"securitySchemes": {
"bearerAuth": {
"type": "http",
"name": "bearerAuth",
"scheme": "bearer",
"bearerFormat": "JWT"
}
}
}
}

