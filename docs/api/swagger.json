{
    "openapi": "3.1.0",
    "info": {
    "title": "HowAreYou API Documentation",
    "description": "HowAreYou 서비스의 API 문서입니다.",
    "version": "1.0.0"
    },
    "servers": [
    {
    "url": "http://localhost:8080",
    "description": "Generated server url"
    }
    ],
    "security": [
    {
    "bearerAuth": []
    }
    ],
    "tags": [
    {
    "name": "회원 테스트",
    "description": "회원 관련 테스트용 API (개발 환경에서만 사용)"
    },
    {
    "name": "알림",
    "description": "실시간 알림 및 SSE 관련 API"
    },
    {
    "name": "테스트",
    "description": "개발 및 테스트용 API (개발 환경에서만 사용)"
    },
    {
    "name": "채팅 메시지",
    "description": "채팅방 메시지 관련 API"
    },
    {
    "name": "채팅방",
    "description": "채팅방 생성, 수락/거절, 조회 등 관련 API"
    },
    {
    "name": "알림 테스트",
    "description": "알림 시스템 테스트용 API (개발 환경에서만 사용)"
    },
    {
    "name": "회원 관리",
    "description": "사용자 계정 및 프로필 관련 API"
    },
    {
    "name": "인증",
    "description": "로그인, 로그아웃, 토큰 갱신 관련 API"
    },
    {
    "name": "Translation",
    "description": "텍스트 번역 API"
    }
    ],
    "paths": {
    "/api/members/me": {
    "get": {
    "tags": [
    "회원 관리"
    ],
    "summary": "내 프로필 조회",
    "description": "현재 로그인한 사용자의 프로필 정보를 조회합니다.",
    "operationId": "getMyProfile",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ProfileResponse"
    }
    }
    }
    }
    }
    },
    "put": {
    "tags": [
    "회원 관리"
    ],
    "summary": "프로필 생성/수정",
    "description": "현재 로그인한 사용자의 프로필을 생성하거나 수정합니다.",
    "operationId": "updateMyProfile",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ProfileCreateRequest"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ProfileResponse"
    }
    }
    }
    }
    }
    },
    "delete": {
    "tags": [
    "회원 관리"
    ],
    "summary": "계정 삭제",
    "description": "현재 로그인한 사용자의 계정을 삭제합니다.\n- 소프트 삭제가 적용되어 실제 데이터는 보관되지만 로그인이 불가능합니다.",
    "operationId": "deleteMyAccount",
    "responses": {
    "200": {
    "description": "OK"
    }
    }
    }
    },
    "/upload-csv": {
    "post": {
    "tags": [
    "csv-upload-controller"
    ],
    "operationId": "uploadCsv",
    "parameters": [
    {
    "name": "filename",
    "in": "query",
    "required": true,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "string"
    }
    }
    }
    }
    }
    }
    },
    "/api/translate/specific": {
    "post": {
    "tags": [
    "Translation"
    ],
    "summary": "Gemini로 번역 (고품질/다시 번역)",
    "description": "기본 번역 결과에 만족하지 않을 경우, Google Gemini API를 통해 고품질 번역을 제공합니다.",
    "operationId": "translateSpecific",
    "requestBody": {
    "description": "번역 요청 DTO",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/TranslateRequestDto"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "번역 성공",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/TranslateResponseDto"
    }
    }
    }
    },
    "400": {
    "description": "잘못된 요청",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ErrorResponse"
    }
    }
    }
    },
    "500": {
    "description": "서버 내부 오류",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ErrorResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/translate/basic": {
    "post": {
    "tags": [
    "Translation"
    ],
    "summary": "기본 번역 (LiberTranslate)",
    "description": "LiberTranslate 엔진을 사용해 텍스트를 번역합니다. 일반적으로 빠르고 경제적인 번역을 제공합니다.",
    "operationId": "translateBasic",
    "requestBody": {
    "description": "번역 요청 DTO",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/TranslateRequestDto"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "번역 성공",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/TranslateResponseDto"
    }
    }
    }
    },
    "400": {
    "description": "잘못된 요청",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ErrorResponse"
    }
    }
    }
    },
    "500": {
    "description": "서버 내부 오류",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ErrorResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/test/voca/generate-vocabook-reactive": {
    "post": {
    "tags": [
    "voca-test-controller"
    ],
    "summary": "단어장 생성 배치 실행 (비동기, 테스트)",
    "description": "주어진 시간 범위를 NLP 분석해 채팅방 단어장을 생성합니다. 미지정 시 직전 1시간.",
    "operationId": "testGenerateVocabulary",
    "parameters": [
    {
    "name": "start",
    "in": "query",
    "description": "시작 시간 (ISO-8601)",
    "required": false,
    "schema": {
    "type": "string",
    "format": "date-time"
    },
    "example": "2025-08-06T07:00:00Z"
    },
    {
    "name": "end",
    "in": "query",
    "description": "종료 시간 (ISO-8601)",
    "required": false,
    "schema": {
    "type": "string",
    "format": "date-time"
    },
    "example": "2025-08-06T11:00:00Z"
    }
    ],
    "responses": {
    "200": {
    "description": "요청 접수(비동기 시작)",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    },
    "500": {
    "description": "서버 오류",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/voca/generate-for-member": {
    "post": {
    "tags": [
    "voca-test-controller"
    ],
    "operationId": "generateForMember",
    "parameters": [
    {
    "name": "memberId",
    "in": "query",
    "description": "사용자 ID",
    "required": true,
    "schema": {
    "type": "integer",
    "format": "int64"
    },
    "example": 3
    },
    {
    "name": "membername",
    "in": "query",
    "description": "사용자 membername",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "user1"
    },
    {
    "name": "userLang",
    "in": "query",
    "description": "사용자 언어(ko/en) — 반대 언어가 수집 대상",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "ko"
    },
    {
    "name": "start",
    "in": "query",
    "description": "시작 시간 (ISO-8601, UTC)",
    "required": false,
    "schema": {
    "type": "string",
    "format": "date-time"
    },
    "example": "2025-08-12T00:00:00Z"
    },
    {
    "name": "end",
    "in": "query",
    "description": "종료 시간 (ISO-8601, UTC)",
    "required": false,
    "schema": {
    "type": "string",
    "format": "date-time"
    },
    "example": "2025-08-13T00:00:00Z"
    },
    {
    "name": "timezone",
    "in": "query",
    "description": "타임존 (start/end 미지정 시 사용)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "Asia/Seoul"
    },
    "example": "Asia/Seoul"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/voca/create-chats": {
    "post": {
    "tags": [
    "voca-test-controller"
    ],
    "summary": "테스트용 채팅 메시지 생성",
    "description": "채팅방 UUID, 발신자, 메시지 내용, 시간 등을 포함하여 다건 테스트 채팅 데이터를 MongoDB에 저장합니다.",
    "operationId": "createTestChats",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "채팅 메시지 생성 성공",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    },
    "400": {
    "description": "입력값 오류"
    },
    "500": {
    "description": "서버 오류"
    }
    }
    }
    },
    "/api/test/voca/analyze/chats": {
    "post": {
    "tags": [
    "voca-test-controller"
    ],
    "summary": "채팅 메시지 NLP 분석",
    "description": "주어진 텍스트를 NLP 서버로 전송하여 불용어 제거 및 품사 태깅된 단어 목록을 반환합니다.",
    "operationId": "analyzeText",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/AnalyzeRequestDto"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "분석 성공",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/AnalyzedResponseWord"
    }
    }
    }
    }
    },
    "400": {
    "description": "잘못된 요청",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/AnalyzedResponseWord"
    }
    }
    }
    }
    },
    "500": {
    "description": "서버 내부 오류",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/AnalyzedResponseWord"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/test/notifications/send-system": {
    "post": {
    "tags": [
    "알림 테스트"
    ],
    "operationId": "sendSystemNotification",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/notifications/send-chatreq": {
    "post": {
    "tags": [
    "알림 테스트"
    ],
    "summary": "채팅 요청 알림 발송 테스트",
    "description": "채팅 요청 알림을 특정 사용자에게 발송합니다. receiverName, requesterId, requesterName, message가 모두 필요합니다.",
    "operationId": "sendChatReqNotification",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/notifications/send-chat": {
    "post": {
    "tags": [
    "알림 테스트"
    ],
    "summary": "채팅 알림 발송 테스트",
    "description": "채팅 메시지 알림을 특정 사용자에게 발송합니다. receiverName, roomId, senderId, messageId, message가 모두 필요합니다.",
    "operationId": "sendChatNotification",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/migrate-cache": {
    "post": {
    "tags": [
    "테스트"
    ],
    "operationId": "migrateCache",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/create-default-accounts": {
    "post": {
    "tags": [
    "테스트"
    ],
    "summary": "기본 테스트 계정들 생성",
    "description": "개발 및 테스트를 위한 기본 테스트 계정들을 일괄 생성합니다. testuser, testuser2, testuser3 계정이 생성됩니다.",
    "operationId": "createDefaultAccounts",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/create-account": {
    "post": {
    "tags": [
    "테스트"
    ],
    "summary": "테스트 계정 생성",
    "description": "개발 및 테스트를 위한 임시 계정을 생성합니다. email, password, membername이 모두 필요합니다.",
    "operationId": "createTestAccount",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {
    "type": "string"
    }
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/clear-cache": {
    "post": {
    "tags": [
    "테스트"
    ],
    "operationId": "clearCache",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/tags/members/{memberId}/classify": {
    "post": {
    "tags": [
    "recommendation-tag-controller"
    ],
    "operationId": "classifyMember",
    "parameters": [
    {
    "name": "memberId",
    "in": "path",
    "required": true,
    "schema": {
    "type": "integer",
    "format": "int64",
    "minimum": 1
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/TagScoresResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/tags/classify": {
    "post": {
    "tags": [
    "recommendation-tag-controller"
    ],
    "operationId": "classify",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/WordsRequest"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/TagScoresResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/quiz/{quizUUID}/submit": {
    "post": {
    "tags": [
    "quiz-controller"
    ],
    "summary": "퀴즈 제출(채점)",
    "description": "퀴즈의 각 문항 선택 (1~4) 를 제출하면 서버에서 채점합니다.",
    "operationId": "submit",
    "parameters": [
    {
    "name": "quizUUID",
    "in": "path",
    "description": "퀴즈 공개용 UUID",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "3b8b5e6a-1e24-4d2f-9d2a-7a1b0f2ec1aa"
    }
    ],
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/SubmitQuizRequest"
    },
    "examples": {
    "기본": {
    "description": "기본",
    "value": {
    "selectedIndexes": [
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2
    ]
    }
    }
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/SubmitResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/quiz/random/start": {
    "post": {
    "tags": [
    "quiz-controller"
    ],
    "summary": "단어장 전체범위 퀴즈 생성",
    "description": "    로그인 사용자의 전체 단어장에서 5~30문항을 자동으로 생성합니다.\n    level: A/B/C 또는 미지정(null) → 전체 난이도 랜덤\n",
    "operationId": "startRandom",
    "parameters": [
    {
    "name": "level",
    "in": "query",
    "description": "A/B/C 또는 전체 난이도 랜덤",
    "required": false,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ClientStartResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/quiz/random/level/start": {
    "post": {
    "tags": [
    "quiz-controller"
    ],
    "summary": "레벨 지정 랜덤 퀴즈 생성(전체범위)",
    "description": "POST /random/start 와 동일 기능이지만, 쿼리스트링으로 간단 호출 가능한 GET 버전입니다.\n- quizLevel(optional): A1|A2|B1|B2|C1|C2\n- 공백으로 요청하면 /random/start 랑 동일해요\n",
    "operationId": "startRandomByLevel",
    "parameters": [
    {
    "name": "quizLevel",
    "in": "query",
    "required": false,
    "schema": {
    "type": "string",
    "enum": [
    "A",
    "B",
    "C"
    ]
    },
    "example": "A2"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ClientStartResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/quiz/daily/start": {
    "post": {
    "tags": [
    "quiz-controller"
    ],
    "summary": "데일리 퀴즈 시작",
    "description": "로그인 사용자의 특정 날짜 단어장에서 5~30문항을 자동 생성합니다.\n- 요청 바디의 `date`는 yyyy-dd-MM(연-일-월) 문자열입니다. 예) \"2025-11-08\" (= 2025년 08월 11일)\n",
    "operationId": "startDaily",
    "parameters": [
    {
    "name": "date",
    "in": "query",
    "required": true,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ClientStartResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/notify/heartbeat": {
    "post": {
    "tags": [
    "알림"
    ],
    "summary": "하트비트 응답",
    "description": "SSE 연결 유지를 위한 하트비트 응답을 전송합니다. 서버에서 ping 이벤트를 받으면 이 엔드포인트로 응답하여 연결 상태를 유지해야 합니다.",
    "operationId": "heartbeat",
    "responses": {
    "200": {
    "description": "OK"
    }
    }
    }
    },
    "/api/members/search/filter": {
    "post": {
    "tags": [
    "회원 관리"
    ],
    "summary": "관심사 필터 기반 다른 유저 조회",
    "description": "  필터에 지정된 모든 카테고리를 포함하는 다른 활성화된 유저 프로필 목록을 반환합니다.\n",
    "operationId": "getFilter",
    "requestBody": {
    "description": "관심사 필터 요청",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/FilterRequest"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/MemberProfile"
    }
    }
    }
    }
    },
    "400": {
    "description": "잘못된 요청",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ErrorResponse"
    }
    }
    }
    },
    "401": {
    "description": "인증되지 않음",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ErrorResponse"
    }
    }
    }
    },
    "500": {
    "description": "서버 오류",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ErrorResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/members/membername": {
    "post": {
    "tags": [
    "회원 관리"
    ],
    "summary": "Membername 설정",
    "description": "사용자의 Membername을 최초 설정하거나 변경합니다.",
    "operationId": "setMembername",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/MembernameRequest"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/MembernameResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/chat-room/{roomUuid}/reject": {
    "post": {
    "tags": [
    "채팅방"
    ],
    "summary": "채팅방 거절",
    "description": "상대방의 채팅 요청을 거절합니다.",
    "operationId": "rejectChatRoom",
    "parameters": [
    {
    "name": "roomUuid",
    "in": "path",
    "description": "채팅방 UUID",
    "required": true,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "receiverId",
    "in": "query",
    "description": "거절하는 사용자 ID",
    "required": true,
    "schema": {
    "type": "integer",
    "format": "int64"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK"
    }
    }
    }
    },
    "/api/chat-room/{roomUuid}/accept": {
    "post": {
    "tags": [
    "채팅방"
    ],
    "summary": "채팅방 수락",
    "description": "상대방의 채팅 요청을 수락합니다.",
    "operationId": "acceptChatRoom",
    "parameters": [
    {
    "name": "roomUuid",
    "in": "path",
    "description": "채팅방 UUID",
    "required": true,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK"
    }
    }
    }
    },
    "/api/chat-room/create": {
    "post": {
    "tags": [
    "채팅방"
    ],
    "summary": "채팅방 생성",
    "description": "상대방과의 1:1 채팅방을 생성합니다.",
    "operationId": "createChatRoom",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/CreateChatRoomRequest"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "채팅방 생성 성공",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/CreateChatRoomResponse"
    }
    }
    }
    },
    "400": {
    "description": "잘못된 요청",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/CreateChatRoomResponse"
    }
    }
    }
    },
    "500": {
    "description": "서버 오류",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/CreateChatRoomResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/chat-message/{chatRoomId}/read": {
    "post": {
    "tags": [
    "채팅 메시지"
    ],
    "summary": "메시지 읽음 처리",
    "description": "채팅방에서 사용자 기준으로 메시지를 읽음 처리합니다.",
    "operationId": "markMessagesAsRead",
    "parameters": [
    {
    "name": "chatRoomId",
    "in": "path",
    "required": true,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "읽음 처리 완료"
    },
    "401": {
    "description": "인증 실패"
    },
    "500": {
    "description": "서버 오류"
    }
    }
    }
    },
    "/api/auth/refresh": {
    "post": {
    "tags": [
    "인증"
    ],
    "summary": "토큰 갱신",
    "description": "리프레시 토큰을 사용하여 새로운 액세스 토큰을 발급받습니다. 리프레시 토큰은 쿠키에서 자동으로 읽어집니다.",
    "operationId": "refresh",
    "responses": {
    "200": {
    "description": "OK"
    }
    }
    }
    },
    "/api/auth/logout": {
    "post": {
    "tags": [
    "인증"
    ],
    "summary": "로그아웃",
    "description": "현재 세션을 종료하고 리프레시 토큰을 무효화합니다. 리프레시 토큰 쿠키도 자동으로 삭제됩니다.",
    "operationId": "logout",
    "responses": {
    "200": {
    "description": "OK"
    }
    }
    }
    },
    "/api/auth/login": {
    "post": {
    "tags": [
    "인증"
    ],
    "summary": "로그인",
    "description": "이메일과 비밀번호로 로그인하여 액세스 토큰과 리프레시 토큰을 발급받습니다. 액세스 토큰은 Authorization 헤더로, 리프레시 토큰은 HttpOnly 쿠키로 전송됩니다.",
    "operationId": "login",
    "requestBody": {
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/LoginDto"
    }
    }
    },
    "required": true
    },
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/TokenBundle"
    }
    }
    }
    }
    }
    }
    },
    "/api/notify/{id}/read": {
    "patch": {
    "tags": [
    "알림"
    ],
    "summary": "알림 읽음 처리",
    "description": "특정 알림을 읽음 상태로 변경합니다.",
    "operationId": "markRead",
    "parameters": [
    {
    "name": "id",
    "in": "path",
    "description": "알림 ID (UUID)",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "123e4567-e89b-12d3-a456-426614174000"
    }
    ],
    "responses": {
    "204": {
    "description": "No Content"
    }
    }
    }
    },
    "/api/vocabook/{chatRoomUuid}": {
    "get": {
    "tags": [
    "chat-voca-book-controller"
    ],
    "summary": "특정 채팅방의 단어장 목록 조회",
    "description": "채팅방 UUID를 기준으로, 해당 채팅방에서 생성된 모든 단어장 목록을 최신순으로 반환합니다.\n\n예시: room1234, room5678",
    "operationId": "getVocabularyListByChatRoom",
    "parameters": [
    {
    "name": "chatRoomUuid",
    "in": "path",
    "description": "채팅방 UUID",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "room1234"
    }
    ],
    "responses": {
    "200": {
    "description": "단어장 목록 조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ChatRoomVocabulary"
    }
    }
    }
    }
    },
    "404": {
    "description": "해당 채팅방의 단어장이 존재하지 않음",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ChatRoomVocabulary"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/vocabook/member/{membername}": {
    "get": {
    "tags": [
    "member-voca-book-controller"
    ],
    "summary": "사용자 전체 단어(중복 제거, 최신 기준) 조회",
    "description": "사용자의 모든 날짜 문서를 합쳐 (word,pos) 중복을 제거하고 analyzedAt이 가장 최신인 항목만 페이지 단위로 반환합니다.",
    "operationId": "getLatestUniqueWords",
    "parameters": [
    {
    "name": "membername",
    "in": "path",
    "description": "사용자 이름",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "user1"
    },
    {
    "name": "lang",
    "in": "query",
    "required": false,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "pos",
    "in": "query",
    "required": false,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "page",
    "in": "query",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 0
    }
    },
    {
    "name": "size",
    "in": "query",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 50
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/PageAggregatedWordEntry"
    }
    }
    }
    }
    }
    }
    },
    "/api/vocabook/member/{membername}/{date}": {
    "get": {
    "tags": [
    "member-voca-book-controller"
    ],
    "summary": "특정 사용자의 날짜별 단어장 조회",
    "description": "지정한 날짜(yyyy-MM-dd)의 단어장을 조회하고, 단어(words) 배열을 페이지 단위로 반환",
    "operationId": "getVocabulariesByMemberAndDate",
    "parameters": [
    {
    "name": "membername",
    "in": "path",
    "description": "사용자 이름",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "user1"
    },
    {
    "name": "date",
    "in": "path",
    "description": "단어 집계 시작 날짜 (yyyy-MM-dd)",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "2025-08-12"
    },
    {
    "name": "page",
    "in": "query",
    "description": "페이지 번호(0부터 시작)",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 0
    },
    "example": 0
    },
    {
    "name": "size",
    "in": "query",
    "description": "페이지 크기",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 50
    },
    "example": 50
    },
    {
    "name": "sortBy",
    "in": "query",
    "description": "정렬 기준 (word|analyzedAt)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "analyzedAt"
    },
    "example": "analyzedAt"
    },
    {
    "name": "direction",
    "in": "query",
    "description": "정렬 방향 (asc|desc)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "desc"
    },
    "example": "desc"
    }
    ],
    "responses": {
    "200": {
    "description": "조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/PageMemberWordEntry"
    }
    }
    }
    },
    "404": {
    "description": "단어장을 찾을 수 없음",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/PageMemberWordEntry"
    }
    }
    }
    }
    }
    }
    },
    "/api/vocabook/member/{membername}/level/{level}": {
    "get": {
    "tags": [
    "member-voca-book-controller"
    ],
    "summary": "사용자별 단어장 난이도별 조회",
    "description": "사용자의 모든 날짜 문서를 합쳐 (word,pos) 중복을 제거하고 analyzedAt이 가장 최신인 항목만 페이지 단위로 반환합니다. level은 경로 변수로 받습니다.",
    "operationId": "getLatestUniqueWordsByLevel",
    "parameters": [
    {
    "name": "membername",
    "in": "path",
    "description": "사용자 이름",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "user1"
    },
    {
    "name": "level",
    "in": "path",
    "description": "레벨(en:a1,a2,b1,b2,c1 / ko:A,B,C)",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "a1"
    },
    {
    "name": "lang",
    "in": "query",
    "required": false,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "pos",
    "in": "query",
    "required": false,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "page",
    "in": "query",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 0
    }
    },
    {
    "name": "size",
    "in": "query",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 50
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/PageAggregatedWordEntry"
    }
    }
    }
    }
    }
    }
    },
    "/api/vocabook/member/all": {
    "get": {
    "tags": [
    "member-voca-book-controller"
    ],
    "operationId": "getAllMemberVocabularies",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/MemberVocabulary"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/vocabook/all": {
    "get": {
    "tags": [
    "chat-voca-book-controller"
    ],
    "summary": "전체 단어장 목록 조회",
    "description": "모든 채팅방의 단어장 목록을 최신순으로 반환합니다.",
    "operationId": "getAllVocabularies",
    "responses": {
    "200": {
    "description": "전체 단어장 목록 조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ChatRoomVocabulary"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/test/notifications/test-users": {
    "get": {
    "tags": [
    "알림 테스트"
    ],
    "operationId": "getTestUsers",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/notifications/status/{memberName}": {
    "get": {
    "tags": [
    "알림 테스트"
    ],
    "operationId": "checkConnectionStatus",
    "parameters": [
    {
    "name": "memberName",
    "in": "path",
    "required": true,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/notifications/status-all": {
    "get": {
    "tags": [
    "알림 테스트"
    ],
    "operationId": "checkAllConnectionStatus",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/health/session": {
    "get": {
    "tags": [
    "health-check-controller"
    ],
    "operationId": "checkSessionHealth",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/health/redis": {
    "get": {
    "tags": [
    "health-check-controller"
    ],
    "operationId": "checkRedisHealth",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/db-status": {
    "get": {
    "tags": [
    "테스트"
    ],
    "operationId": "checkDatabaseStatus",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/test/cache-health": {
    "get": {
    "tags": [
    "테스트"
    ],
    "operationId": "checkCacheHealth",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    }
    }
    }
    }
    },
    "/api/tags/recommend": {
    "get": {
    "tags": [
    "recommendation-tag-controller"
    ],
    "operationId": "recommendMembers",
    "parameters": [
    {
    "name": "topN",
    "in": "query",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 5
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "type": "integer",
    "format": "int64"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/quiz/{quizUUID}": {
    "get": {
    "tags": [
    "quiz-controller"
    ],
    "summary": "퀴즈 단건 조회",
    "description": "퀴즈 UUID로 문항(보기 포함)을 다시 가져옵니다. 이미 시작했던 퀴즈 재로딩 용도.",
    "operationId": "getOne",
    "parameters": [
    {
    "name": "quizUUID",
    "in": "path",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": "3b8b5e6a-1e24-4d2f-9d2a-7a1b0f2ec1aa"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/QuizResultResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/quiz/me": {
    "get": {
    "tags": [
    "quiz-controller"
    ],
    "summary": "내 퀴즈 전체 조회(페이징)",
    "description": "로그인한 사용자의 모든 퀴즈 결과를 최신순으로 반환합니다.\n- page: 0부터 시작\n- size: 페이지 크기 (기본 20)\n- status(optional): PENDING | SUBMIT | NULL(널이면 전체조회) 필터\n- type(optional): RANDOM | DAILY 필터\n",
    "operationId": "getMyQuizzes",
    "parameters": [
    {
    "name": "page",
    "in": "query",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 0
    },
    "example": 0
    },
    {
    "name": "size",
    "in": "query",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 20
    },
    "example": 20
    },
    {
    "name": "status",
    "in": "query",
    "required": false,
    "schema": {
    "type": "string",
    "enum": [
    "PENDING",
    "SUBMIT"
    ]
    },
    "example": "SUBMIT"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object"
    }
    }
    }
    }
    }
    }
    },
    "/api/notify": {
    "get": {
    "tags": [
    "알림"
    ],
    "summary": "알림 목록 조회",
    "description": "사용자의 알림 목록을 페이지네이션으로 조회합니다. 최신 알림부터 정렬되어 반환됩니다.",
    "operationId": "list",
    "parameters": [
    {
    "name": "page",
    "in": "query",
    "description": "페이지 번호 (0부터 시작)",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 0
    },
    "example": 0
    },
    {
    "name": "size",
    "in": "query",
    "description": "페이지 크기",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 20
    },
    "example": 20
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/PageNotifyDto"
    }
    }
    }
    }
    }
    }
    },
    "/api/notify/unread-count": {
    "get": {
    "tags": [
    "알림"
    ],
    "summary": "읽지 않은 알림 개수 조회",
    "description": "사용자가 읽지 않은 알림의 개수를 반환합니다.",
    "operationId": "unreadCount",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {
    "type": "integer",
    "format": "int64"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/notify/sse": {
    "get": {
    "tags": [
    "알림"
    ],
    "summary": "SSE 연결 구독",
    "description": "Server-Sent Events를 통한 실시간 알림 구독을 시작합니다. 연결 후 서버에서 ping 이벤트를 주기적으로 전송하며, 클라이언트는 heartbeat 엔드포인트로 응답해야 합니다.",
    "operationId": "subscribe",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/SseEmitter"
    }
    }
    }
    }
    }
    }
    },
    "/api/members/{membername}": {
    "get": {
    "tags": [
    "회원 관리"
    ],
    "summary": "공개 프로필 조회",
    "description": "특정 사용자의 공개 프로필을 조회합니다.",
    "operationId": "getPublicProfile",
    "parameters": [
    {
    "name": "membername",
    "in": "path",
    "description": "조회할 사용자 ID",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": 1
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ProfileResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/members/{membername}/status": {
    "get": {
    "tags": [
    "회원 관리"
    ],
    "summary": "사용자 상태 조회",
    "description": "사용자의 온라인/오프라인 상태, 마지막 활동 시간, 프로필 완료 여부를 조회합니다.",
    "operationId": "getMemberStatus",
    "parameters": [
    {
    "name": "membername",
    "in": "path",
    "description": "상태를 조회할 사용자 ID",
    "required": true,
    "schema": {
    "type": "string"
    },
    "example": 1
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/MemberStatusResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/members/search/peers": {
    "get": {
    "tags": [
    "회원 관리"
    ],
    "summary": "같은 관심사를 가진 다른 유저 조회",
    "description": "로그인한 사용자가 설정한 관심사와 동일한 카테고리를 가진\n다른 활성화된 사용자들의 프로필 목록을 반환합니다.\n",
    "operationId": "getPeers",
    "responses": {
    "200": {
    "description": "조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/MemberProfile"
    }
    }
    }
    }
    },
    "401": {
    "description": "인증되지 않음",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ErrorResponse"
    }
    }
    }
    },
    "500": {
    "description": "서버 에러",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ErrorResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/members/membername/duplicated": {
    "get": {
    "tags": [
    "회원 관리"
    ],
    "summary": "Membername 중복 확인",
    "description": "입력한 Membername이 이미 존재하는지 확인합니다. (프론트 실시간 AJAX용)",
    "operationId": "duplicated",
    "parameters": [
    {
    "name": "membername",
    "in": "query",
    "required": true,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "boolean"
    }
    }
    }
    }
    }
    }
    },
    "/api/members/all": {
    "get": {
    "tags": [
    "회원 테스트"
    ],
    "summary": "전체 회원 목록 조회",
    "description": "시스템에 등록된 모든 회원의 목록을 조회합니다. (테스트용)",
    "operationId": "getAllMembers",
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/Member"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/dashboard": {
    "get": {
    "tags": [
    "dashboard-controller"
    ],
    "summary": "대시보드 요약 정보 조회",
    "description": "사용자의 학습 현황을 종합적으로 조회합니다. 총 단어 개수, 연속 학습일, 복습 필요 날짜, 학습 성과 분석, 오답노트를 포함합니다.",
    "operationId": "getDashboard",
    "parameters": [
    {
    "name": "timezone",
    "in": "query",
    "description": "타임존 (기본값: Asia/Seoul)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "Asia/Seoul"
    },
    "example": "Asia/Seoul"
    },
    {
    "name": "period",
    "in": "query",
    "description": "조회 기간 (week/month, 기본값: week)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "week"
    },
    "example": "week"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/DashboardSummary"
    }
    }
    }
    }
    }
    }
    },
    "/api/dashboard/wrong-answers": {
    "get": {
    "tags": [
    "dashboard-controller"
    ],
    "summary": "오답노트",
    "description": "사용자가 가장 최근에 푼 퀴즈에서 틀린 단어의 word-meaning-pos 가져와서 제공",
    "operationId": "getWrongAnswers",
    "responses": {
    "200": {
    "description": "오답노트 조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/WrongAnswer"
    }
    }
    }
    }
    },
    "404": {
    "description": "해당 오답노트가 존재하지 않음",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/WrongAnswer"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/dashboard/words/count": {
    "get": {
    "tags": [
    "dashboard-controller"
    ],
    "summary": "단어 개수 조회",
    "description": "사용자의 단어 개수를 조회합니다. 언어, 품사별 필터링이 가능합니다.",
    "operationId": "countWords",
    "parameters": [
    {
    "name": "lang",
    "in": "query",
    "description": "언어 필터 (예: en, ko)",
    "required": false,
    "schema": {
    "type": "string"
    },
    "example": "en"
    },
    {
    "name": "pos",
    "in": "query",
    "description": "품사 필터 (예: noun, verb)",
    "required": false,
    "schema": {
    "type": "string"
    },
    "example": "noun"
    },
    {
    "name": "period",
    "in": "query",
    "description": "조회 기간 (week/month, 기본값: week)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "week"
    },
    "example": "week"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "integer",
    "format": "int64"
    }
    }
    }
    }
    }
    }
    },
    "/api/dashboard/vocabulary-grass": {
    "get": {
    "tags": [
    "dashboard-controller"
    ],
    "summary": "단어장 잔디 데이터 조회",
    "description": "단어장 학습 잔디 데이터를 조회합니다.",
    "operationId": "getVocabularyGrass",
    "parameters": [
    {
    "name": "year",
    "in": "query",
    "description": "조회 연도",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 2025
    },
    "example": 2024
    },
    {
    "name": "timezone",
    "in": "query",
    "description": "타임존 (기본값: Asia/Seoul)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "Asia/Seoul"
    },
    "example": "Asia/Seoul"
    },
    {
    "name": "period",
    "in": "query",
    "description": "조회 기간 (week/month, 기본값: week)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "week"
    },
    "example": "week"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {
    "type": "integer",
    "format": "int32"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/dashboard/quiz-grass": {
    "get": {
    "tags": [
    "dashboard-controller"
    ],
    "summary": "퀴즈 잔디 데이터 조회",
    "description": "퀴즈 학습 잔디 데이터를 조회합니다.",
    "operationId": "getQuizGrass",
    "parameters": [
    {
    "name": "year",
    "in": "query",
    "description": "조회 연도",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 2025
    },
    "example": 2024
    },
    {
    "name": "timezone",
    "in": "query",
    "description": "타임존 (기본값: Asia/Seoul)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "Asia/Seoul"
    },
    "example": "Asia/Seoul"
    },
    {
    "name": "period",
    "in": "query",
    "description": "조회 기간 (week/month, 기본값: week)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "week"
    },
    "example": "week"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {
    "type": "integer",
    "format": "int32"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/dashboard/learning-streak": {
    "get": {
    "tags": [
    "dashboard-controller"
    ],
    "summary": "연속 학습일 조회",
    "description": "사용자의 연속 학습일을 조회합니다.",
    "operationId": "getLearningStreak",
    "parameters": [
    {
    "name": "timezone",
    "in": "query",
    "description": "타임존 (기본값: Asia/Seoul)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "Asia/Seoul"
    },
    "example": "Asia/Seoul"
    },
    {
    "name": "period",
    "in": "query",
    "description": "조회 기간 (week/month, 기본값: week)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "week"
    },
    "example": "week"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "integer",
    "format": "int32"
    }
    }
    }
    }
    }
    }
    },
    "/api/dashboard/learning-grass": {
    "get": {
    "tags": [
    "dashboard-controller"
    ],
    "summary": "학습 잔디 데이터 조회",
    "description": "GitHub 스타일의 학습 잔디 데이터를 조회합니다.",
    "operationId": "getLearningGrass",
    "parameters": [
    {
    "name": "year",
    "in": "query",
    "description": "조회 연도",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 2025
    },
    "example": 2024
    },
    {
    "name": "timezone",
    "in": "query",
    "description": "타임존 (기본값: Asia/Seoul)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "Asia/Seoul"
    },
    "example": "Asia/Seoul"
    },
    {
    "name": "period",
    "in": "query",
    "description": "조회 기간 (week/month, 기본값: week)",
    "required": false,
    "schema": {
    "type": "string",
    "default": "week"
    },
    "example": "week"
    }
    ],
    "responses": {
    "200": {
    "description": "OK",
    "content": {
    "application/json": {
    "schema": {
    "type": "object",
    "additionalProperties": {
    "type": "integer",
    "format": "int32"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/chat-room/{roomUuid}": {
    "get": {
    "tags": [
    "채팅방"
    ],
    "summary": "단일 채팅방 조회",
    "description": "특정 채팅방의 상세 정보를 조회합니다.",
    "operationId": "getChatRoom",
    "parameters": [
    {
    "name": "roomUuid",
    "in": "path",
    "description": "채팅방 UUID",
    "required": true,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ChatRoomResponse"
    }
    }
    }
    }
    }
    },
    "delete": {
    "tags": [
    "채팅방"
    ],
    "summary": "채팅방 연결 해제 및 삭제",
    "description": "현재 사용자가 채팅방에서 나가고 연결을 끊습니다.",
    "operationId": "disconnectChatRoom",
    "parameters": [
    {
    "name": "roomUuid",
    "in": "path",
    "description": "채팅방 UUID",
    "required": true,
    "schema": {
    "type": "string"
    }
    }
    ],
    "responses": {
    "204": {
    "description": "삭제 성공"
    },
    "404": {
    "description": "채팅방 없음"
    }
    }
    }
    },
    "/api/chat-room/requests/sent": {
    "get": {
    "tags": [
    "채팅방"
    ],
    "summary": "내가 보낸 채팅 요청 목록",
    "description": "현재 로그인한 사용자가 보낸(발신자) 채팅 요청 목록을 조회합니다.",
    "operationId": "getMySentChatRequests",
    "responses": {
    "200": {
    "description": "조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ChatRequestSummaryResponse"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/chat-room/requests/received": {
    "get": {
    "tags": [
    "채팅방"
    ],
    "summary": "내가 받은 채팅 요청 목록",
    "description": "현재 로그인한 사용자가 받은(수신자) 채팅 요청 목록을 조회합니다.",
    "operationId": "getMyReceivedChatRequests",
    "responses": {
    "200": {
    "description": "조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ChatRequestSummaryResponse"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/chat-room/my-rooms": {
    "get": {
    "tags": [
    "채팅방"
    ],
    "summary": "내 채팅방 목록 조회",
    "description": "현재 로그인한 사용자가 참여 중인 채팅방 목록을 조회합니다.",
    "operationId": "getMyChatRooms",
    "responses": {
    "200": {
    "description": "조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ChatRoomSummaryResponse"
    }
    }
    }
    }
    }
    }
    },
    "/api/chat-message/{chatRoomId}/recent": {
    "get": {
    "tags": [
    "채팅 메시지"
    ],
    "summary": "최근 메시지 조회",
    "description": "지정된 채팅방에서 가장 최근의 메시지 N개를 조회합니다. (Redis 우선 조회)",
    "operationId": "getRecentMessages",
    "parameters": [
    {
    "name": "chatRoomId",
    "in": "path",
    "required": true,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "count",
    "in": "query",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 30
    }
    }
    ],
    "responses": {
    "200": {
    "description": "조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ChatMessageDocumentResponse"
    }
    }
    }
    },
    "404": {
    "description": "채팅방 없음",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ChatMessageDocumentResponse"
    }
    }
    }
    }
    },
    "500": {
    "description": "서버 오류",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ChatMessageDocumentResponse"
    }
    }
    }
    }
    }
    }
    }
    },
    "/api/chat-message/{chatRoomId}/previous": {
    "get": {
    "tags": [
    "채팅 메시지"
    ],
    "summary": "이전 메시지 페이징 조회",
    "description": "무한스크롤 방식으로 특정 시간 이전의 메시지들을 조회합니다.",
    "operationId": "getPreviousMessages",
    "parameters": [
    {
    "name": "chatRoomId",
    "in": "path",
    "required": true,
    "schema": {
    "type": "string"
    }
    },
    {
    "name": "before",
    "in": "query",
    "required": true,
    "schema": {
    "type": "string",
    "format": "date-time"
    }
    },
    {
    "name": "size",
    "in": "query",
    "required": false,
    "schema": {
    "type": "integer",
    "format": "int32",
    "default": 30
    }
    }
    ],
    "responses": {
    "200": {
    "description": "조회 성공",
    "content": {
    "application/json": {
    "schema": {
    "$ref": "#/components/schemas/ChatMessageDocumentResponse"
    }
    }
    }
    },
    "400": {
    "description": "잘못된 시간 형식",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ChatMessageDocumentResponse"
    }
    }
    }
    }
    },
    "500": {
    "description": "서버 오류",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ChatMessageDocumentResponse"
    }
    }
    }
    }
    }
    }
    }
    }
    },
    "components": {
    "schemas": {
    "ProfileCreateRequest": {
    "type": "object",
    "properties": {
    "nickname": {
    "type": "string",
    "minLength": 1
    },
    "statusMessage": {
    "type": "string"
    },
    "avatarUrl": {
    "type": "string"
    },
    "interests": {
    "type": "array",
    "items": {
    "type": "string",
    "enum": [
    "LANGUAGE_LEARNING",
    "TRAVEL",
    "CULTURE",
    "BUSINESS",
    "EDUCATION",
    "TECHNOLOGY",
    "SPORTS",
    "MUSIC",
    "FOOD",
    "ART",
    "SCIENCE",
    "HISTORY",
    "MOVIES",
    "GAMES",
    "LITERATURE",
    "PHOTOGRAPHY",
    "NATURE",
    "FITNESS",
    "FASHION",
    "VOLUNTEERING",
    "ANIMALS",
    "CARS",
    "DIY",
    "FINANCE"
    ]
    },
    "uniqueItems": true
    },
    "birthDate": {
    "type": "string",
    "format": "date"
    },
    "country": {
    "type": "string",
    "pattern": "^[A-Za-z]{2}$"
    },
    "region": {
    "type": "string"
    },
    "language": {
    "type": "string",
    "pattern": "^(ko|en)$"
    },
    "timezone": {
    "type": "string"
    }
    },
    "required": [
    "nickname"
    ]
    },
    "ProfileResponse": {
    "type": "object",
    "properties": {
    "membername": {
    "type": "string"
    },
    "nickname": {
    "type": "string"
    },
    "avatarUrl": {
    "type": "string"
    },
    "bio": {
    "type": "string"
    },
    "interests": {
    "type": "array",
    "items": {
    "type": "string",
    "enum": [
    "LANGUAGE_LEARNING",
    "TRAVEL",
    "CULTURE",
    "BUSINESS",
    "EDUCATION",
    "TECHNOLOGY",
    "SPORTS",
    "MUSIC",
    "FOOD",
    "ART",
    "SCIENCE",
    "HISTORY",
    "MOVIES",
    "GAMES",
    "LITERATURE",
    "PHOTOGRAPHY",
    "NATURE",
    "FITNESS",
    "FASHION",
    "VOLUNTEERING",
    "ANIMALS",
    "CARS",
    "DIY",
    "FINANCE"
    ]
    },
    "uniqueItems": true
    },
    "completed": {
    "type": "boolean"
    },
    "language": {
    "type": "string"
    },
    "timezone": {
    "type": "string"
    },
    "birthDate": {
    "type": "string",
    "format": "date"
    },
    "age": {
    "type": "integer",
    "format": "int32"
    },
    "country": {
    "type": "string"
    },
    "region": {
    "type": "string"
    }
    }
    },
    "TranslateRequestDto": {
    "type": "object",
    "description": "번역 요청 DTO",
    "properties": {
    "q": {
    "type": "string",
    "description": "번역할 원문",
    "example": "안녕하세요"
    },
    "source": {
    "type": "string",
    "description": "소스 언어",
    "example": "ko"
    },
    "target": {
    "type": "string",
    "description": "타겟 언어",
    "example": "en"
    }
    }
    },
    "TranslateResponseDto": {
    "type": "object",
    "description": "번역 응답 DTO",
    "properties": {
    "translatedText": {
    "type": "string",
    "description": "번역된 결과",
    "example": "Hello"
    }
    }
    },
    "ErrorResponse": {
    "type": "object",
    "properties": {
    "headers": {
    "type": "object",
    "additionalProperties": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "properties": {
    "connection": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "ifModifiedSince": {
    "type": "integer",
    "format": "int64"
    },
    "contentType": {
    "$ref": "#/components/schemas/MediaType"
    },
    "contentLength": {
    "type": "integer",
    "format": "int64"
    },
    "empty": {
    "type": "boolean"
    },
    "location": {
    "type": "string",
    "format": "uri"
    },
    "host": {
    "type": "object",
    "properties": {
    "hostString": {
    "type": "string"
    },
    "address": {
    "type": "object",
    "properties": {
    "hostAddress": {
    "type": "string"
    },
    "address": {
    "type": "string",
    "format": "byte"
    },
    "hostName": {
    "type": "string"
    },
    "linkLocalAddress": {
    "type": "boolean"
    },
    "anyLocalAddress": {
    "type": "boolean"
    },
    "multicastAddress": {
    "type": "boolean"
    },
    "loopbackAddress": {
    "type": "boolean"
    },
    "siteLocalAddress": {
    "type": "boolean"
    },
    "mcglobal": {
    "type": "boolean"
    },
    "mcnodeLocal": {
    "type": "boolean"
    },
    "mclinkLocal": {
    "type": "boolean"
    },
    "mcsiteLocal": {
    "type": "boolean"
    },
    "mcorgLocal": {
    "type": "boolean"
    },
    "canonicalHostName": {
    "type": "string"
    }
    }
    },
    "port": {
    "type": "integer",
    "format": "int32"
    },
    "unresolved": {
    "type": "boolean"
    },
    "hostName": {
    "type": "string"
    }
    }
    },
    "all": {
    "type": "object",
    "additionalProperties": {
    "type": "string"
    },
    "writeOnly": true
    },
    "lastModified": {
    "type": "integer",
    "format": "int64"
    },
    "date": {
    "type": "integer",
    "format": "int64"
    },
    "range": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/HttpRange"
    }
    },
    "origin": {
    "type": "string"
    },
    "accessControlAllowCredentials": {
    "type": "boolean"
    },
    "accessControlAllowHeaders": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "accessControlAllowMethods": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/HttpMethod"
    }
    },
    "accessControlAllowOrigin": {
    "type": "string"
    },
    "accessControlExposeHeaders": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "accessControlRequestHeaders": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "accessControlRequestMethod": {
    "$ref": "#/components/schemas/HttpMethod"
    },
    "acceptLanguage": {
    "type": "array",
    "items": {
    "type": "object",
    "properties": {
    "range": {
    "type": "string"
    },
    "weight": {
    "type": "number",
    "format": "double"
    }
    }
    }
    },
    "basicAuth": {
    "type": "string",
    "writeOnly": true
    },
    "acceptLanguageAsLocales": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "acceptPatch": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/MediaType"
    }
    },
    "accessControlMaxAge": {
    "type": "integer",
    "format": "int64"
    },
    "acceptCharset": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "bearerAuth": {
    "type": "string",
    "writeOnly": true
    },
    "contentDisposition": {
    "$ref": "#/components/schemas/ContentDisposition"
    },
    "contentLanguage": {
    "type": "string"
    },
    "ifNoneMatch": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "ifUnmodifiedSince": {
    "type": "integer",
    "format": "int64"
    },
    "cacheControl": {
    "type": "string"
    },
    "etag": {
    "type": "string"
    },
    "allow": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/HttpMethod"
    },
    "uniqueItems": true
    },
    "accept": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/MediaType"
    }
    },
    "expires": {
    "type": "integer",
    "format": "int64"
    },
    "ifMatch": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "pragma": {
    "type": "string"
    },
    "upgrade": {
    "type": "string"
    },
    "vary": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    }
    },
    "body": {
    "$ref": "#/components/schemas/ProblemDetail"
    },
    "detailMessageArguments": {
    "type": "array",
    "items": {}
    },
    "typeMessageCode": {
    "type": "string"
    },
    "detailMessageCode": {
    "type": "string"
    },
    "titleMessageCode": {
    "type": "string"
    },
    "statusCode": {
    "oneOf": [
    {
    "$ref": "#/components/schemas/DefaultHttpStatusCode"
    },
    {
    "$ref": "#/components/schemas/HttpStatus"
    }
    ]
    }
    }
    },
    "AnalyzeRequestDto": {
    "type": "object",
    "description": "분석할 텍스트",
    "properties": {
    "text": {
    "type": "string"
    }
    }
    },
    "AnalyzedResponseWord": {
    "type": "object",
    "properties": {
    "word": {
    "type": "string"
    },
    "pos": {
    "type": "string"
    },
    "lang": {
    "type": "string"
    },
    "sourceMessageId": {
    "type": "string"
    },
    "example": {
    "type": "string"
    }
    }
    },
    "TagScoresResponse": {
    "type": "object",
    "properties": {
    "scores": {
    "type": "object",
    "additionalProperties": {
    "type": "number",
    "format": "double"
    }
    }
    }
    },
    "WordsRequest": {
    "type": "object",
    "properties": {
    "words": {
    "type": "array",
    "items": {
    "type": "string",
    "minLength": 1
    }
    }
    }
    },
    "SubmitQuizRequest": {
    "type": "object",
    "properties": {
    "quizResultId": {
    "type": "integer",
    "format": "int64"
    },
    "selectedIndexes": {
    "type": "array",
    "items": {
    "type": "integer",
    "format": "int32"
    },
    "maxItems": 2147483647,
    "minItems": 1
    }
    }
    },
    "SubmitResponse": {
    "type": "object",
    "properties": {
    "quizUUID": {
    "type": "string"
    },
    "correctCount": {
    "type": "integer",
    "format": "int32"
    },
    "totalQuestions": {
    "type": "integer",
    "format": "int32"
    },
    "score": {
    "type": "integer",
    "format": "int64"
    }
    }
    },
    "ClientQuizQuestion": {
    "type": "object",
    "properties": {
    "question": {
    "type": "string"
    },
    "choices": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "questionNo": {
    "type": "integer",
    "format": "int32"
    }
    }
    },
    "ClientStartResponse": {
    "type": "object",
    "properties": {
    "quizResultId": {
    "type": "integer",
    "format": "int64"
    },
    "quizQuestions": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ClientQuizQuestion"
    }
    },
    "quizUUID": {
    "type": "string"
    }
    }
    },
    "FilterRequest": {
    "type": "object",
    "properties": {
    "interests": {
    "type": "array",
    "items": {
    "type": "string",
    "enum": [
    "LANGUAGE_LEARNING",
    "TRAVEL",
    "CULTURE",
    "BUSINESS",
    "EDUCATION",
    "TECHNOLOGY",
    "SPORTS",
    "MUSIC",
    "FOOD",
    "ART",
    "SCIENCE",
    "HISTORY",
    "MOVIES",
    "GAMES",
    "LITERATURE",
    "PHOTOGRAPHY",
    "NATURE",
    "FITNESS",
    "FASHION",
    "VOLUNTEERING",
    "ANIMALS",
    "CARS",
    "DIY",
    "FINANCE"
    ]
    },
    "uniqueItems": true
    }
    }
    },
    "MemberProfile": {
    "type": "object",
    "properties": {
    "id": {
    "type": "integer",
    "format": "int64"
    },
    "createdAt": {
    "type": "string",
    "format": "date-time"
    },
    "updatedAt": {
    "type": "string",
    "format": "date-time"
    },
    "nickname": {
    "type": "string"
    },
    "avatarUrl": {
    "type": "string"
    },
    "bio": {
    "type": "string"
    },
    "interests": {
    "type": "array",
    "items": {
    "type": "string",
    "enum": [
    "LANGUAGE_LEARNING",
    "TRAVEL",
    "CULTURE",
    "BUSINESS",
    "EDUCATION",
    "TECHNOLOGY",
    "SPORTS",
    "MUSIC",
    "FOOD",
    "ART",
    "SCIENCE",
    "HISTORY",
    "MOVIES",
    "GAMES",
    "LITERATURE",
    "PHOTOGRAPHY",
    "NATURE",
    "FITNESS",
    "FASHION",
    "VOLUNTEERING",
    "ANIMALS",
    "CARS",
    "DIY",
    "FINANCE"
    ]
    },
    "uniqueItems": true
    },
    "completed": {
    "type": "boolean"
    },
    "language": {
    "type": "string"
    },
    "timezone": {
    "type": "string"
    },
    "birthDate": {
    "type": "string",
    "format": "date"
    },
    "country": {
    "type": "string"
    },
    "region": {
    "type": "string"
    },
    "age": {
    "type": "integer",
    "format": "int32"
    }
    }
    },
    "ContentDisposition": {
    "type": "object",
    "properties": {
    "type": {
    "type": "string"
    },
    "name": {
    "type": "string"
    },
    "filename": {
    "type": "string"
    },
    "charset": {
    "type": "string"
    },
    "size": {
    "type": "integer",
    "format": "int64",
    "deprecated": true
    },
    "creationDate": {
    "type": "string",
    "format": "date-time",
    "deprecated": true
    },
    "modificationDate": {
    "type": "string",
    "format": "date-time",
    "deprecated": true
    },
    "readDate": {
    "type": "string",
    "format": "date-time",
    "deprecated": true
    },
    "inline": {
    "type": "boolean"
    },
    "attachment": {
    "type": "boolean"
    },
    "formData": {
    "type": "boolean"
    }
    }
    },
    "DefaultHttpStatusCode": {
    "allOf": [
    {
    "$ref": "#/components/schemas/HttpStatusCode"
    }
    ]
    },
    "HttpMethod": {},
    "HttpRange": {},
    "HttpStatus": {
    "allOf": [
    {
    "$ref": "#/components/schemas/HttpStatusCode"
    }
    ],
    "enum": [
    "100 CONTINUE",
    "101 SWITCHING_PROTOCOLS",
    "102 PROCESSING",
    "103 EARLY_HINTS",
    "103 CHECKPOINT",
    "200 OK",
    "201 CREATED",
    "202 ACCEPTED",
    "203 NON_AUTHORITATIVE_INFORMATION",
    "204 NO_CONTENT",
    "205 RESET_CONTENT",
    "206 PARTIAL_CONTENT",
    "207 MULTI_STATUS",
    "208 ALREADY_REPORTED",
    "226 IM_USED",
    "300 MULTIPLE_CHOICES",
    "301 MOVED_PERMANENTLY",
    "302 FOUND",
    "302 MOVED_TEMPORARILY",
    "303 SEE_OTHER",
    "304 NOT_MODIFIED",
    "305 USE_PROXY",
    "307 TEMPORARY_REDIRECT",
    "308 PERMANENT_REDIRECT",
    "400 BAD_REQUEST",
    "401 UNAUTHORIZED",
    "402 PAYMENT_REQUIRED",
    "403 FORBIDDEN",
    "404 NOT_FOUND",
    "405 METHOD_NOT_ALLOWED",
    "406 NOT_ACCEPTABLE",
    "407 PROXY_AUTHENTICATION_REQUIRED",
    "408 REQUEST_TIMEOUT",
    "409 CONFLICT",
    "410 GONE",
    "411 LENGTH_REQUIRED",
    "412 PRECONDITION_FAILED",
    "413 PAYLOAD_TOO_LARGE",
    "413 REQUEST_ENTITY_TOO_LARGE",
    "414 URI_TOO_LONG",
    "414 REQUEST_URI_TOO_LONG",
    "415 UNSUPPORTED_MEDIA_TYPE",
    "416 REQUESTED_RANGE_NOT_SATISFIABLE",
    "417 EXPECTATION_FAILED",
    "418 I_AM_A_TEAPOT",
    "419 INSUFFICIENT_SPACE_ON_RESOURCE",
    "420 METHOD_FAILURE",
    "421 DESTINATION_LOCKED",
    "422 UNPROCESSABLE_ENTITY",
    "423 LOCKED",
    "424 FAILED_DEPENDENCY",
    "425 TOO_EARLY",
    "426 UPGRADE_REQUIRED",
    "428 PRECONDITION_REQUIRED",
    "429 TOO_MANY_REQUESTS",
    "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
    "451 UNAVAILABLE_FOR_LEGAL_REASONS",
    "500 INTERNAL_SERVER_ERROR",
    "501 NOT_IMPLEMENTED",
    "502 BAD_GATEWAY",
    "503 SERVICE_UNAVAILABLE",
    "504 GATEWAY_TIMEOUT",
    "505 HTTP_VERSION_NOT_SUPPORTED",
    "506 VARIANT_ALSO_NEGOTIATES",
    "507 INSUFFICIENT_STORAGE",
    "508 LOOP_DETECTED",
    "509 BANDWIDTH_LIMIT_EXCEEDED",
    "510 NOT_EXTENDED",
    "511 NETWORK_AUTHENTICATION_REQUIRED"
    ]
    },
    "HttpStatusCode": {
    "type": "object",
    "properties": {
    "error": {
    "type": "boolean"
    },
    "is4xxClientError": {
    "type": "boolean"
    },
    "is5xxServerError": {
    "type": "boolean"
    },
    "is1xxInformational": {
    "type": "boolean"
    },
    "is2xxSuccessful": {
    "type": "boolean"
    },
    "is3xxRedirection": {
    "type": "boolean"
    }
    }
    },
    "MediaType": {
    "type": "object",
    "properties": {
    "type": {
    "type": "string"
    },
    "subtype": {
    "type": "string"
    },
    "parameters": {
    "type": "object",
    "additionalProperties": {
    "type": "string"
    }
    },
    "qualityValue": {
    "type": "number",
    "format": "double"
    },
    "concrete": {
    "type": "boolean"
    },
    "charset": {
    "type": "string"
    },
    "wildcardType": {
    "type": "boolean"
    },
    "wildcardSubtype": {
    "type": "boolean"
    },
    "subtypeSuffix": {
    "type": "string"
    }
    }
    },
    "ProblemDetail": {
    "type": "object",
    "properties": {
    "type": {
    "type": "string",
    "format": "uri"
    },
    "title": {
    "type": "string"
    },
    "status": {
    "type": "integer",
    "format": "int32"
    },
    "detail": {
    "type": "string"
    },
    "instance": {
    "type": "string",
    "format": "uri"
    },
    "properties": {
    "type": "object",
    "additionalProperties": {}
    }
    }
    },
    "MembernameRequest": {
    "type": "object",
    "properties": {
    "membername": {
    "type": "string",
    "minLength": 1,
    "pattern": "^[a-z0-9_]{3,30}$"
    }
    },
    "required": [
    "membername"
    ]
    },
    "MembernameResponse": {
    "type": "object",
    "properties": {
    "username": {
    "type": "string"
    }
    }
    },
    "CreateChatRoomRequest": {
    "type": "object",
    "properties": {
    "membername": {
    "type": "string"
    }
    }
    },
    "CreateChatRoomResponse": {
    "type": "object",
    "properties": {
    "uuid": {
    "type": "string"
    }
    }
    },
    "LoginDto": {
    "type": "object",
    "description": "로그인 정보",
    "properties": {
    "email": {
    "type": "string"
    },
    "password": {
    "type": "string"
    }
    }
    },
    "TokenBundle": {
    "type": "object",
    "properties": {
    "access": {
    "type": "string"
    },
    "refresh": {
    "type": "string"
    },
    "completed": {
    "type": "boolean"
    }
    }
    },
    "ChatRoomVocabulary": {
    "type": "object",
    "properties": {
    "id": {
    "type": "string"
    },
    "chatRoomUuid": {
    "type": "string"
    },
    "analyzedAt": {
    "type": "string",
    "format": "date-time"
    },
    "words": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/DictionaryWordEntry"
    }
    }
    }
    },
    "DictionaryWordEntry": {
    "type": "object",
    "properties": {
    "word": {
    "type": "string"
    },
    "meaning": {
    "type": "string"
    },
    "pos": {
    "type": "string"
    },
    "lang": {
    "type": "string"
    },
    "level": {
    "type": "string"
    },
    "dictionaryType": {
    "type": "string"
    },
    "messageIds": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "usedInMessages": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    }
    },
    "AggregatedWordEntry": {
    "type": "object",
    "properties": {
    "word": {
    "type": "string"
    },
    "meaning": {
    "type": "string"
    },
    "pos": {
    "type": "string"
    },
    "lang": {
    "type": "string"
    },
    "level": {
    "type": "string"
    },
    "analyzedAt": {
    "type": "string",
    "format": "date-time"
    },
    "chatRoomUuid": {
    "type": "string"
    },
    "chatMessageId": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "example": {
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    }
    },
    "PageAggregatedWordEntry": {
    "type": "object",
    "properties": {
    "totalElements": {
    "type": "integer",
    "format": "int64"
    },
    "totalPages": {
    "type": "integer",
    "format": "int32"
    },
    "first": {
    "type": "boolean"
    },
    "last": {
    "type": "boolean"
    },
    "size": {
    "type": "integer",
    "format": "int32"
    },
    "content": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/AggregatedWordEntry"
    }
    },
    "number": {
    "type": "integer",
    "format": "int32"
    },
    "sort": {
    "$ref": "#/components/schemas/SortObject"
    },
    "pageable": {
    "$ref": "#/components/schemas/PageableObject"
    },
    "numberOfElements": {
    "type": "integer",
    "format": "int32"
    },
    "empty": {
    "type": "boolean"
    }
    }
    },
    "PageableObject": {
    "type": "object",
    "properties": {
    "offset": {
    "type": "integer",
    "format": "int64"
    },
    "sort": {
    "$ref": "#/components/schemas/SortObject"
    },
    "pageNumber": {
    "type": "integer",
    "format": "int32"
    },
    "pageSize": {
    "type": "integer",
    "format": "int32"
    },
    "unpaged": {
    "type": "boolean"
    },
    "paged": {
    "type": "boolean"
    }
    }
    },
    "SortObject": {
    "type": "object",
    "properties": {
    "empty": {
    "type": "boolean"
    },
    "unsorted": {
    "type": "boolean"
    },
    "sorted": {
    "type": "boolean"
    }
    }
    },
    "MemberWordEntry": {
    "type": "object",
    "properties": {
    "word": {
    "type": "string"
    },
    "meaning": {
    "type": "string"
    },
    "pos": {
    "type": "string"
    },
    "lang": {
    "type": "string"
    },
    "level": {
    "type": "string"
    },
    "dictionaryType": {
    "type": "string"
    },
    "chatRoomUuid": {
    "type": "string"
    },
    "chatMessageId": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "example": {
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "analyzedAt": {
    "type": "string",
    "format": "date-time"
    }
    }
    },
    "PageMemberWordEntry": {
    "type": "object",
    "properties": {
    "totalElements": {
    "type": "integer",
    "format": "int64"
    },
    "totalPages": {
    "type": "integer",
    "format": "int32"
    },
    "first": {
    "type": "boolean"
    },
    "last": {
    "type": "boolean"
    },
    "size": {
    "type": "integer",
    "format": "int32"
    },
    "content": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/MemberWordEntry"
    }
    },
    "number": {
    "type": "integer",
    "format": "int32"
    },
    "sort": {
    "$ref": "#/components/schemas/SortObject"
    },
    "pageable": {
    "$ref": "#/components/schemas/PageableObject"
    },
    "numberOfElements": {
    "type": "integer",
    "format": "int32"
    },
    "empty": {
    "type": "boolean"
    }
    }
    },
    "MemberVocabulary": {
    "type": "object",
    "properties": {
    "id": {
    "type": "string"
    },
    "membername": {
    "type": "string"
    },
    "createdAt": {
    "type": "string",
    "format": "date-time"
    },
    "words": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/MemberWordEntry"
    }
    }
    }
    },
    "QuizResponse": {
    "type": "object",
    "properties": {
    "questionNo": {
    "type": "integer",
    "format": "int32"
    },
    "word": {
    "type": "string"
    },
    "meaning": {
    "type": "string"
    },
    "choice1": {
    "type": "string"
    },
    "choice2": {
    "type": "string"
    },
    "choice3": {
    "type": "string"
    },
    "choice4": {
    "type": "string"
    },
    "correctAnswer": {
    "type": "integer",
    "format": "int32"
    },
    "userAnswer": {
    "type": "integer",
    "format": "int32"
    },
    "isCorrect": {
    "type": "boolean"
    },
    "level": {
    "type": "string"
    },
    "pos": {
    "type": "string"
    }
    }
    },
    "QuizResultResponse": {
    "type": "object",
    "properties": {
    "quizResultId": {
    "type": "integer",
    "format": "int64"
    },
    "quizUUID": {
    "type": "string"
    },
    "quizType": {
    "type": "string",
    "enum": [
    "DAILY",
    "RANDOM"
    ]
    },
    "dailyDate": {
    "type": "string"
    },
    "createdAt": {
    "type": "string",
    "format": "date-time"
    },
    "totalQuestions": {
    "type": "integer",
    "format": "int64"
    },
    "correctCount": {
    "type": "integer",
    "format": "int64"
    },
    "score": {
    "type": "integer",
    "format": "int64"
    },
    "accuracy": {
    "type": "number",
    "format": "double"
    },
    "status": {
    "type": "string",
    "enum": [
    "PENDING",
    "SUBMIT"
    ]
    },
    "words": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/QuizResponse"
    }
    }
    }
    },
    "NotifyDto": {
    "type": "object",
    "properties": {
    "id": {
    "type": "string"
    },
    "type": {
    "type": "string",
    "enum": [
    "CHAT",
    "CHATREQ",
    "SYSTEM"
    ]
    },
    "createdAt": {
    "type": "string",
    "format": "date-time"
    },
    "readAt": {
    "type": "string",
    "format": "date-time"
    },
    "payload": {
    "type": "string"
    }
    }
    },
    "PageNotifyDto": {
    "type": "object",
    "properties": {
    "totalElements": {
    "type": "integer",
    "format": "int64"
    },
    "totalPages": {
    "type": "integer",
    "format": "int32"
    },
    "first": {
    "type": "boolean"
    },
    "last": {
    "type": "boolean"
    },
    "size": {
    "type": "integer",
    "format": "int32"
    },
    "content": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/NotifyDto"
    }
    },
    "number": {
    "type": "integer",
    "format": "int32"
    },
    "sort": {
    "$ref": "#/components/schemas/SortObject"
    },
    "pageable": {
    "$ref": "#/components/schemas/PageableObject"
    },
    "numberOfElements": {
    "type": "integer",
    "format": "int32"
    },
    "empty": {
    "type": "boolean"
    }
    }
    },
    "SseEmitter": {
    "type": "object",
    "properties": {
    "timeout": {
    "type": "integer",
    "format": "int64"
    }
    }
    },
    "MemberStatusResponse": {
    "type": "object",
    "properties": {
    "membername": {
    "type": "string"
    },
    "online": {
    "type": "boolean"
    },
    "lastActiveAt": {
    "type": "string",
    "format": "date-time"
    },
    "profileCompleted": {
    "type": "boolean"
    }
    }
    },
    "Member": {
    "type": "object",
    "properties": {
    "id": {
    "type": "integer",
    "format": "int64"
    },
    "createdAt": {
    "type": "string",
    "format": "date-time"
    },
    "updatedAt": {
    "type": "string",
    "format": "date-time"
    },
    "email": {
    "type": "string"
    },
    "membername": {
    "type": "string"
    },
    "active": {
    "type": "boolean"
    },
    "role": {
    "type": "string",
    "enum": [
    "USER",
    "ADMIN"
    ]
    },
    "lastActiveAt": {
    "type": "string",
    "format": "date-time"
    },
    "profile": {
    "$ref": "#/components/schemas/MemberProfile"
    },
    "profileCompleted": {
    "type": "boolean"
    }
    }
    },
    "DashboardSummary": {
    "type": "object",
    "properties": {
    "totalWords": {
    "type": "integer",
    "format": "int64"
    },
    "learningStreakDays": {
    "type": "integer",
    "format": "int32"
    },
    "reviewNeededDays": {
    "type": "integer",
    "format": "int32"
    },
    "encouragementMessage": {
    "type": "string"
    },
    "scoreSeries": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/ScorePoint"
    }
    },
    "wrongAnswerNotes": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/WrongAnswerResponse"
    }
    }
    }
    },
    "ScorePoint": {
    "type": "object",
    "properties": {
    "quizUuid": {
    "type": "string"
    },
    "submittedAtUtc": {
    "type": "string",
    "format": "date-time"
    },
    "score": {
    "type": "integer",
    "format": "int32"
    }
    }
    },
    "WrongAnswerResponse": {
    "type": "object",
    "properties": {
    "word": {
    "type": "string"
    },
    "meaning": {
    "type": "string"
    },
    "pos": {
    "type": "string"
    }
    }
    },
    "WrongAnswer": {
    "type": "object",
    "properties": {
    "word": {
    "type": "string"
    },
    "meaning": {
    "type": "string"
    },
    "pos": {
    "type": "string"
    }
    }
    },
    "ChatRoomResponse": {
    "type": "object",
    "properties": {
    "uuid": {
    "type": "string"
    },
    "roomStatus": {
    "type": "string"
    },
    "memberId": {
    "type": "integer",
    "format": "int64"
    },
    "memberName": {
    "type": "string"
    }
    }
    },
    "ChatRequestSummaryResponse": {
    "type": "object",
    "properties": {
    "roomUuid": {
    "type": "string"
    },
    "opponentId": {
    "type": "integer",
    "format": "int64"
    },
    "opponentName": {
    "type": "string"
    },
    "roomStatus": {
    "type": "string"
    },
    "createdAt": {
    "type": "string",
    "format": "date-time"
    }
    }
    },
    "ChatRoomSummaryResponse": {
    "type": "object",
    "properties": {
    "chatRoomId": {
    "type": "string"
    },
    "opponentId": {
    "type": "integer",
    "format": "int64"
    },
    "opponentName": {
    "type": "string"
    },
    "roomStatus": {
    "type": "string"
    },
    "lastMessageContent": {
    "type": "string"
    },
    "lastMessageTime": {
    "type": "string",
    "format": "date-time"
    },
    "unreadCount": {
    "type": "integer",
    "format": "int32"
    }
    }
    },
    "ChatMessageDocumentResponse": {
    "type": "object",
    "properties": {
    "id": {
    "type": "string"
    },
    "chatRoomUuid": {
    "type": "string"
    },
    "senderName": {
    "type": "string"
    },
    "content": {
    "type": "string"
    },
    "messageTime": {
    "type": "string",
    "format": "date-time"
    },
    "chatMessageStatus": {
    "type": "string"
    }
    }
    }
    },
    "securitySchemes": {
    "bearerAuth": {
    "type": "http",
    "name": "bearerAuth",
    "scheme": "bearer",
    "bearerFormat": "JWT"
    }
    }
    }
    }